(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    155030,       3327]
NotebookOptionsPosition[    154329,       3302]
NotebookOutlinePosition[    154684,       3318]
CellTagsIndexPosition[    154641,       3315]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Examples", "Section",
 CellChangeTimes->{{3.6902304234872217`*^9, 3.690230425086211*^9}, {
  3.77602626972101*^9, 
  3.7760262710460052`*^9}},ExpressionUUID->"52e0d913-f014-492c-a6b4-\
5cbda98ccb7a"],

Cell["\<\
\t\tIf the user has any problems executing this notebook he/she may wish to \
first read the Quick Start guide. In 
\t\tparticular, it is advisable, though not necessary, to install the palette \
first. The palette provides a cheat sheet 
\t\tfor using this package.\
\>",
 CellChangeTimes->{{3.690231531682176*^9, 3.690231564084057*^9}, {
   3.690232162437015*^9, 3.690232305165399*^9}, {3.690232335660934*^9, 
   3.690232360944112*^9}, {3.6902323946432543`*^9, 3.690232440100747*^9}, 
   3.690232484891096*^9, {3.690237083035925*^9, 3.690237108672027*^9}, {
   3.6902371449357023`*^9, 3.690237158197989*^9}, {3.6902372332374372`*^9, 
   3.690237233723813*^9}, 3.774119139110125*^9, {3.774550152108502*^9, 
   3.774550153739943*^9}, {3.7761860724325323`*^9, 3.776186128959181*^9}, {
   3.77618617221213*^9, 3.776186256966207*^9}},
 FontFamily->"Arial",
 FontSize->14,ExpressionUUID->"82993419-cba8-452c-9d5c-e6ab1dab52c6"],

Cell[BoxData[
 RowBox[{"\n", 
  RowBox[{
   RowBox[{"Needs", "[", "\"\<GeomAlg2019Dec`\>\"", "]"}], "\n", 
   RowBox[{
    RowBox[{
    "Print", "[", 
     "\"\<The context list shows that this package has been added to your \
working environment.\>\"", "]"}], ";"}], "\[IndentingNewLine]", 
   "$ContextPath", "   ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Shows", " ", "which", " ", "contexts", " ", "are", " ", "available", " ",
      "and", " ", "their", " ", "precdence", " ", "order"}], " ", "*)"}], 
   "\n", 
   RowBox[{
    RowBox[{"Print", "[", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "Print", "[", 
     "\"\<The table below lists all of the functions available in this \
package. Most, but not all, are accessible via the palette.\>\"", "]"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"?", "\"\<GeomAlg2019Dec`*\>\""}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Creates", " ", "table", " ", "of", " ", "functions", " ", "created", " ",
      "by", " ", "this", " ", "package"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", "]"}], ";", 
    RowBox[{
    "Print", "[", "\n", 
     "\"\<Type ?(any function) to get a short help description. For example: \
?InverseG yields\>\"", "]"}], ";"}], "\n", 
   RowBox[{"?", "InverseG"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Prints", " ", "a", " ", "short", " ", "help", " ", "description", " ", 
     "of", " ", "InverseG", " ", 
     RowBox[{"function", ".", " ", 
      RowBox[{"?", " ", 
       RowBox[{"works", " ", "with", " ", "all", " ", "functions"}]}]}]}], 
    " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{
    "Print", "[", 
     "\"\<Another short help description is available by hovering mouse over \
any box in the palette.\>\"", "]"}], ";"}], " ", "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"INITIALIZATION", " ", "OPTIONS"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", "]"}], ";", 
    RowBox[{"Print", "[", 
     RowBox[{"Style", "[", 
      RowBox[{"\"\<INITIALIZATION OPTIONS\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"Bold", ",", "Blue"}], "}"}]}], "]"}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", "]"}], ";", 
    RowBox[{
    "Print", "[", 
     "\"\<This package comes with a default initialization:  ++++ Quadratic \
Form, and Space (rather than Spacetime). The easieast way to change \
initialization is with the palette. You can click your choice of quadratic \
form on the palette. You can also type in your choice. \>\"", "]"}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{"signatureType", "=", "1"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"signatureType", "=", "1"}], ";", " ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"signatureType", "\[Equal]", "1"}], ",", 
      RowBox[{
      "Print", "[", "\"\<signatureType = 1 \[Rule]  ++++...\>\"", "]"}], ",", 
      
      RowBox[{
      "Print", "[", "\"\<signatureType = 2 \[Rule] ----...\>\"", "]"}]}], 
     "]"}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
    "Print", "[", 
     "\"\<For pure space, set slider to 0; for spacetime, set it to 1\>\"", 
     "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"numTimelike", "=", "1"}], ";", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"numTimelike", "\[Equal]", "1"}], ",", 
      RowBox[{
      "Print", "[", "\"\<numTimelike = 1 -> Spacetime  --+++...\>\"", "]"}]}],
      "]"}], ";", 
    RowBox[{
    "Print", "[", 
     "\"\<If you are adventurous, you can explore two time dimensions by \
setting slider to 2\>\"", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"numTimelike", "=", "2"}], ";", " ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"numTimelike", "\[Equal]", "2"}], ",", 
      RowBox[{"Print", "[", "\"\<numTimelike = 2 ->--+++...\>\"", "]"}]}], 
     "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"numTimelike", "=", "0"}], ";", 
    RowBox[{
    "Print", "[", 
     "\"\<We'll set it to Pure space for now:  numTimelike = 0 -> Space  \
+++...\>\"", "]"}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"DIMENSION", " ", "AND", " ", "GRADE"}], "  ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", "]"}], ";", 
    RowBox[{"Print", "[", 
     RowBox[{"Style", "[", 
      RowBox[{"\"\<DIMENSION AND GRADE\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"Bold", ",", "Blue"}], "}"}]}], "]"}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<A = \>\"", ",", 
      RowBox[{"clifA", " ", "=", " ", 
       RowBox[{
        SubscriptBox["e", "2"], "+", 
        RowBox[{
         SubscriptBox["e", "1"], 
         SubscriptBox["e", "3"], 
         SubscriptBox["e", "5"]}]}]}]}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Maximum dimension of A is \>\"", ",", 
      RowBox[{"MaxDimG", "[", "clifA", "]"}]}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Maximum grade of A is \>\"", ",", 
      RowBox[{"MaxGradeG", "[", "clifA", "]"}]}], "]"}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "FORMULAS", " ", "FOR", " ", "PRODUCTS", " ", "OF", " ", "2", " ", 
     "MULTIVECTORS"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"x", "=."}], ";", 
    RowBox[{"y", "=."}], ";"}], "\n", 
   RowBox[{
    RowBox[{"ClearAll", "[", "Subscript", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", "]"}], ";", 
    RowBox[{"Print", "[", 
     RowBox[{"Style", "[", 
      RowBox[{"\"\<FORMULAS FOR PRODUCTS OF 2 MULTIVECTORS\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"Bold", ",", "Blue"}], "}"}]}], "]"}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"mVecA", "=", 
     RowBox[{
      RowBox[{"GradedClifG", "[", 
       RowBox[{"x", ",", "2", ",", "3"}], "]"}], "+", "5"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"mVecB", "=", 
     RowBox[{"GradedClifG", "[", 
      RowBox[{"y", ",", "2", ",", " ", "3"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<A = \>\"", ",", "mVecA", ",", "\"\<,  B = \>\"", ",", "mVecB"}], 
     "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Constant part of A = \>\"", ",", 
      RowBox[{"ConstantG", "[", "mVecA", "]"}]}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Free part of A = \>\"", ",", 
      RowBox[{"FreeTermG", "[", "mVecA", "]"}]}], "]"}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"geomAB", " ", "=", " ", 
     RowBox[{"mVecA", "\[Diamond]", "mVecB"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"wedgeAB", " ", "=", " ", 
     RowBox[{"mVecA", "\[Wedge]", "mVecB"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"dotAB", " ", "=", 
     RowBox[{"mVecA", "\[CenterDot]", "mVecB"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"scalarAB", "=", 
     RowBox[{"mVecA", "\[Star]", "mVecB"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"lcontractAB", "=", 
     RowBox[{"mVecA", "\[LeftTee]", "mVecB"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"rcontractAB", "=", 
     RowBox[{"mVecA", "\[RightTee]", "mVecB"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<Geometric (a.k.a. Clifford) Product: A\[Diamond]B = \>\"", ",", 
      "geomAB"}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Wedge (a.k.a Exterior) Product = \>\"", ",", "wedgeAB"}], 
     "]"}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"Print", "[", "]"}], ";", 
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Dot Product = \>\"", ",", "dotAB"}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<The dot product is performed term-by-term. The dot product of a \
p-atom with a \>\"", "<>", "\n", "   ", 
      "\"\<q-atom is their geometric product if it has grade | p \[Dash] q |, \
and zero otherwise.\>\""}], "]"}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"Print", "[", "]"}], ";", 
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Scalar Product = \>\"", ",", "scalarAB"}], "]"}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Left Contraction = \>\"", ",", "lcontractAB"}], "]"}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Right Contraction = \>\"", ",", "rcontractAB"}], "]"}], 
    ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "OPERATIONS", " ", "ON", " ", "A", " ", "SINGLE", " ", "MULTIVECTOR"}], 
    " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"gormA", "=", 
     RowBox[{"GormG", "[", "mVecA", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"normA", "=", 
     RowBox[{"NormG", "[", "mVecA", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"revA", "=", 
     RowBox[{"ReverseG", "[", "mVecA", "]"}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"invA", "=", 
     RowBox[{"Inverse4G", "[", "mVecA", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"hodgeA", "=", 
     RowBox[{"HodgeDualG", "[", 
      RowBox[{"mVecA", ",", "3"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"hodge2A", "=", 
     RowBox[{"HodgeDual2G", "[", 
      RowBox[{"mVecA", ",", "3"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"involute", "=", 
     RowBox[{"GradeInvoluteG", "[", "mVecA", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"conjugate", "=", 
     RowBox[{"ClifConjugateG", "[", "mVecA", "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"Print", "[", "]"}], ";", 
    RowBox[{"Print", "[", 
     RowBox[{"Style", "[", 
      RowBox[{"\"\<OPERATIONS ON A SINGLE MULTIVECTOR\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"Bold", ",", "Blue"}], "}"}]}], "]"}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", "]"}], ";", 
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Gorm of A = \>\"", ",", "gormA"}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", "]"}], ";", 
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Norm of A = \>\"", ",", "normA"}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", "]"}], ";", 
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Reverse of A = \>\"", ",", "revA"}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", "]"}], ";", 
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Inverse of A = \>\"", ",", "invA"}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", "\"\<Confirmation:\>\"", " ", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<   A \[Diamond] \!\(\*SuperscriptBox[\(A\), \(-1\)]\) = \>\"", ",", 
      
      RowBox[{"mVecA", "\[Diamond]", "invA"}]}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<   = \>\"", ",", 
      RowBox[{"Simplify", "[", "%", "]"}]}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
    "Print", "[", 
     "\"\<This package will find the inverse of any invertible multivector in \
dimension \[LessEqual] 5.\>\"", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
    "Print", "[", 
     "\"\<In higher dimensions, it doesn't hurt to try. InverseG can find the \
inverse of most multivectors having only a handful of terms (say 8 or 10). \
Here is a dimension 100 example.\>\"", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Clear", "[", "Subscript", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"clifC", " ", "=", 
     RowBox[{
      RowBox[{"2", 
       SubscriptBox["e", "1"]}], "+", 
      RowBox[{
       SubscriptBox["e", "2"], 
       SubscriptBox["e", "4"], 
       SubscriptBox["e", "6"]}], "+", 
      RowBox[{"6", 
       SubscriptBox["e", "2"], " ", 
       SubscriptBox["e", "3"], 
       SubscriptBox["e", "4"], 
       SubscriptBox["e", "5"]}], "-", 
      RowBox[{"5", 
       SubscriptBox["e", "5"], 
       SubscriptBox["e", "6"]}], "-", 
      RowBox[{"2", 
       SubscriptBox["e", "2"], 
       StyleBox[
        SubscriptBox["e", "100"],
        FontWeight->"Bold",
        FontColor->RGBColor[1, 0, 1]]}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<C = \>\"", ",", "clifC"}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<\!\(\*SuperscriptBox[\(C\), \(-1\)]\) = \>\"", ",", 
      RowBox[{"inv", "=", 
       RowBox[{"InverseG", "[", "clifC", "]"}]}]}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<Confirmation: \!\(\*SuperscriptBox[\(C\), \(-1\)]\) \[Diamond] C = \
\>\"", ",", 
      RowBox[{"prdt", "=", 
       RowBox[{"inv", "\[Diamond]", "clifC"}]}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", "]"}], ";", 
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Another example: Let D = \>\"", ",", 
      RowBox[{"clifD", "=", 
       RowBox[{"2", "+", 
        SubscriptBox["e", "1"], "+", 
        SubscriptBox["e", "2"], "+", 
        RowBox[{
         SubscriptBox["e", "1"], " ", 
         SubscriptBox["e", "2"]}], "+", 
        RowBox[{
         SqrtBox["5"], " ", 
         SubscriptBox["e", "1"], " ", 
         SubscriptBox["e", "2"]}]}]}]}], "]"}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Then InverseG[D] = \>\"", ",", 
      RowBox[{"inv1", "=", 
       RowBox[{"InverseG", "[", "clifD", "]"}]}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "Print", "[", 
     "\"\<In this case, InverseG used Inverse4G (see tooltip in \
palette).\>\"", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", "Subscript", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<However, InverseNG[D] gives \>\"", ",", 
      RowBox[{"inv2", "=", 
       RowBox[{"InverseNG", "[", "clifD", "]"}]}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "Print", "[", 
     "\"\<Though not obvious, the answers are equivalent! To see this, apply \
\!\(\*StyleBox[\"FullSimplifyG\",FontWeight->\"Bold\",FontColor->RGBColor[1, \
0.5, 0.5]]\) to both answers. \
(\!\(\*StyleBox[\"SimplifyG\",FontWeight->\"Bold\",FontColor->RGBColor[1, \
0.5, 0.5]]\) is also available though not found in the palette.) This \
function applies FullSimplify to any clif, term-by-term.\>\"", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<FullSimplifyG[inv1] = \>\"", ",", 
      RowBox[{"FullSimplifyG", "[", "inv1", "]"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<FullSimplifyG[inv2] = \>\"", ",", 
      RowBox[{"FullSimplifyG", "[", "inv2", "]"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "Print", "[", 
     "\"\<The lesson here is twofold. (1) It may be worth trying \
FullSimplifyG or your own tailored simplification techniques to simplify your \
answer. (2) Sometimes InverseNG produces a simpler expression than Inverse4G \
or Inverse5G.\>\"", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "Print", "[", 
     "\"\<See the section below on lists for further information on \
ClifToListG and ListToClifG.\>\"", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "Print", "[", 
     "\"\<There are (at least) 4 different definitions for Hodge Dual.\>\"", 
     "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<The palette uses *A = HodgeDualG[A] = A \[Diamond] i = \>\"", ",", 
      "hodgeA"}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
    "Print", "[", 
     "\"\<Three other valid formulas are made available (but not in the \
palette):\>\"", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<   HodgeDual2G, 3G, and 4G. For example, HodgeDual2G[A] = A \
\[Diamond] \!\(\*SuperscriptBox[\(i\), \(-1\)]\) = \>\"", ",", "hodge2A"}], 
     "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", "]"}], ";", 
    RowBox[{
    "Print", "[", 
     "\"\<In addition to ReverseG, two more involutions are provided.\>\"", 
     "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
    "Print", "[", 
     "\"\<Grade involution reverses the sign of terms of odd grade.\>\"", 
     "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Grade Involution of A = \>\"", ",", "involute"}], "]"}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{
    "Print", "[", 
     "\"\<The Clifford Conjugate reverses the sign of terms of grades 1&2, \
5&6, 9&10, ...\>\"", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Clifford conjugate of A = \>\"", ",", "conjugate"}], "]"}], 
    ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"GEOMETRIC", " ", "PRODUCT", " ", "SYMBOLIC", " ", "3"}], "-", 
     RowBox[{"DIMENSIONAL", " ", "FORMULA"}]}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", "]"}], ";", 
    RowBox[{"Print", "[", 
     RowBox[{"Style", "[", 
      RowBox[{
      "\"\<SYMBOLIC FORMULA FOR GEOMETRIC PRODUCT OF TWO 3-DIMENSIONAL \
MULTIVECTORS\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"Bold", ",", "Blue"}], "}"}]}], "]"}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"clifA", "=", 
     RowBox[{"ClifG", "[", 
      RowBox[{"a", ",", "3"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"clifB", "=", 
     RowBox[{"ClifG", "[", 
      RowBox[{"b", ",", "3"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"prdtAB", "=", 
     RowBox[{"GeomPrdtG", "[", 
      RowBox[{"clifA", ",", "clifB"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<A = \>\"", ",", "clifA"}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<B = \>\"", ",", "clifB"}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", "]"}], ";", 
    RowBox[{"Print", "[", 
     RowBox[{"\"\<A\[Diamond]B = \>\"", ",", "prdtAB"}], " ", "]"}], ";"}], 
   " ", "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "NUMERICAL", " ", "PRODUCTS", " ", "OF", " ", "2", " ", "MULTIVECTORS", 
     " ", "and", " ", "PRODUCTS", " ", "OF", " ", "2", " ", "Symbolic", " ", 
     "MULTIVECTORS"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", "]"}], ";", 
    RowBox[{"Print", "[", 
     RowBox[{"Style", "[", 
      RowBox[{"\"\<PRODUCTS OF 2 MULTIVECTORS \>\"", ",", 
       RowBox[{"{", 
        RowBox[{"Bold", ",", "Blue"}], "}"}]}], "]"}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"clifListA", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"3", "+", 
        RowBox[{"4", "/", "5"}], "-", 
        SubscriptBox["e", "1"], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"\[Sqrt]", "Pi"}]}], ")"}], 
         SubscriptBox["e", "2"], 
         SubscriptBox["e", "3"]}], "+", 
        RowBox[{"Sin", "[", 
         RowBox[{"Pi", "/", "4"}], "]"}]}], ",", 
       RowBox[{"p", "+", 
        RowBox[{"r", " ", 
         SubscriptBox["e", "1"]}], "+", 
        RowBox[{"s", " ", 
         SubscriptBox["e", "2"]}]}], ",", 
       RowBox[{
        SubscriptBox["a", "0"], "+", 
        RowBox[{
         SubscriptBox["a", "1"], " ", 
         SubscriptBox["e", "1"]}], "+", 
        RowBox[{
         SubscriptBox["a", "2"], " ", 
         SubscriptBox["e", "2"]}], "+", 
        RowBox[{
         SubscriptBox["e", "1"], " ", 
         SubscriptBox["e", "2"], " ", 
         SubscriptBox["a", 
          RowBox[{"1", ",", "2"}]]}]}]}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"clifListB", "=", 
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{
        SubscriptBox["e", "2"], "+", 
        SubscriptBox["e", "1"], "+", 
        RowBox[{
         SubscriptBox["e", "2"], 
         SubscriptBox["e", "4"]}]}], ",", 
       RowBox[{
        SubscriptBox["b", "0"], "+", 
        RowBox[{
         SubscriptBox["b", "1"], " ", 
         SubscriptBox["e", "1"]}], "+", 
        RowBox[{
         SubscriptBox["b", "2"], " ", 
         SubscriptBox["e", "2"]}], "+", 
        RowBox[{
         SubscriptBox["e", "3"], " ", 
         SubscriptBox["e", "4"], " ", 
         SubscriptBox["b", 
          RowBox[{"3", ",", "4"}]]}]}], ",", 
       RowBox[{
        SubscriptBox["b", "0"], "+", 
        RowBox[{
         SubscriptBox["b", "1"], " ", 
         SubscriptBox["e", "1"]}], "+", 
        RowBox[{
         SubscriptBox["b", "2"], " ", 
         SubscriptBox["e", "2"]}], "+", 
        RowBox[{
         SubscriptBox["e", "3"], " ", 
         SubscriptBox["e", "4"], " ", 
         SubscriptBox["b", 
          RowBox[{"3", ",", "4"}]]}]}]}], "}"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"clifTableAB", "=", 
     RowBox[{"List", "[", 
      RowBox[{"clifListA", ",", "clifListB"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", "]"}], ";", 
    RowBox[{
    "Print", "[", "\"\<Table of Cases to be evaluated below:\>\"", "]"}], 
    ";"}], "\n", 
   RowBox[{"TableForm", "[", 
    RowBox[{"clifTableAB", ",", 
     RowBox[{"TableHeadings", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Case 1\>\"", ",", "\"\<Case 2\>\"", ",", "\"\<Case 3\>\""}], 
         "}"}]}], "}"}]}]}], "]"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Number of cases to evaluate = \>\"", ",", 
      RowBox[{"len", "=", 
       RowBox[{"Length", "[", "clifListA", "]"}]}]}], "]"}], ";", 
    RowBox[{"Print", "[", "]"}], ";"}], "\n", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"x", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"GeomPrdtG", "[", 
        RowBox[{
         RowBox[{"clifListA", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"clifListB", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "len"}], "}"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"y", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"WedgePrdtG", "[", 
        RowBox[{
         RowBox[{"clifListA", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"clifListB", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "len"}], "}"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"z", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"DotPrdtG", "[", 
        RowBox[{
         RowBox[{"clifListA", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"clifListB", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "len"}], "}"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"u", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"ScalarPrdtG", "[", 
        RowBox[{
         RowBox[{"clifListA", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"clifListB", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "len"}], "}"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"w", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"LeftContractionG", "[", 
        RowBox[{
         RowBox[{"clifListA", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"clifListB", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "len"}], "}"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"v", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"RightContractionG", "[", 
        RowBox[{
         RowBox[{"clifListA", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"clifListB", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "len"}], "}"}]}], "]"}]}], ";"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"Style", "[", 
      RowBox[{"\"\<PRODUCTS OF 2 NUMERICAL MULTIVECTORS \>\"", ",", 
       RowBox[{"{", "Blue", "}"}]}], "]"}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"i", "\[LessEqual]", "len"}], ",", 
      RowBox[{"i", "++"}], ",", 
      RowBox[{
       RowBox[{"Print", "[", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"i", "\[Equal]", "2"}], ",", 
         RowBox[{"Print", "[", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<PRODUCTS OF 2 Symbolic MULTIVECTORS\>\"", ",", 
            RowBox[{"{", "Blue", "}"}]}], "]"}], "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<Clif1 = \>\"", ",", 
         RowBox[{"clifListA", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<Clif2 = \>\"", ",", 
         RowBox[{"clifListB", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<Geometric Product = \>\"", ",", 
         RowBox[{"x", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<Wedge Product = \>\"", ",", 
         RowBox[{"y", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<Dot Product = \>\"", ",", 
         RowBox[{"z", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<Scalar Product = \>\"", ",", 
         RowBox[{"u", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<Left Contraction = \>\"", ",", 
         RowBox[{"w", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<Right Contraction = \>\"", ",", 
         RowBox[{"v", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}]}], "]"}], ";"}], "\n", 
   "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "PRODUCTS", " ", "OF", " ", "3", " ", "OR", " ", "MORE", " ", 
     "MULTIVECTORS"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", "]"}], ";", 
    RowBox[{"Print", "[", 
     RowBox[{"Style", "[", 
      RowBox[{"\"\<PRODUCTS OF 3 OR MORE MULTIVECTORS\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"Bold", ",", "Blue"}], "}"}]}], "]"}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"clifA", "=", "3"}], ";", " ", 
    RowBox[{"clifB", "=", 
     RowBox[{"2", 
      SubscriptBox["e", "2"]}]}], ";", " ", 
    RowBox[{"clifC", "=", 
     RowBox[{"4", "-", 
      RowBox[{
       SubscriptBox["e", "3"], 
       SubscriptBox["e", "4"]}]}]}], ";", " ", 
    RowBox[{"clifE", "=", 
     RowBox[{
      SubscriptBox["e", "2"], "+", 
      SubscriptBox["e", "5"]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<A = \>\"", ",", "clifA", ",", "\"\<, B = \>\"", ",", "clifB", ",", 
      "\"\<, C = \>\"", ",", "clifC", ",", "\"\<, E = \>\"", ",", "clifE"}], 
     "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"clifP", "=", 
     RowBox[{
     "clifA", "\[Diamond]", "clifB", "\[Diamond]", "clifC", "\[Diamond]", 
      "clifE"}]}], ";"}], " ", "\n", 
   RowBox[{
    RowBox[{"Print", "[", "]"}], ";", 
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<Geometric Product P = A \[Diamond] B \[Diamond] C \[Diamond] E = \>\
\"", ",", "clifP", ",", "\"\<  (Note: Associative)\>\""}], "]"}], ";"}], " ", 
   "\n", 
   RowBox[{
    RowBox[{"clifW", "=", 
     RowBox[{
     "clifA", "\[Wedge]", "clifB", "\[Wedge]", "clifC", "\[Wedge]", 
      "clifE"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<Wedge Product W = A \[Wedge] B \[Wedge] C \[Wedge] E = \>\"", ",", 
      "clifW", ",", "\"\<  (Associative)\>\""}], "]"}], ";"}], "  ", "\n", 
   RowBox[{
    RowBox[{"clifD", "=", 
     RowBox[{
     "clifA", " ", "\[CenterDot]", "clifB", "\[CenterDot]", "clifC", 
      "\[CenterDot]", "clifE"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<Dot Product D = A \[CenterDot] B \[CenterDot] C \[CenterDot] E \
\[Congruent] ( (A \[CenterDot] B) \[CenterDot] C ) \[CenterDot] E = \>\"", 
      ",", "clifD", ",", "\"\<  (Not associative)\>\""}], "]"}], ";"}], "\n", 
   
   RowBox[{
    RowBox[{"clifH", "=", 
     RowBox[{"clifB", "\[Star]", "clifE", "\[Star]", "clifA"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<Scalar Product H = B \[Star] E \[Star] A \[Congruent] (B \[Star] E) \
\[Star] A = \>\"", ",", "clifH", ",", "\"\<  (Not associative)\>\""}], "]"}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{"clifF", "=", 
     RowBox[{
      RowBox[{"clifA", " ", "\[LeftTee]", " ", "clifB"}], "\[LeftTee]", " ", 
      "clifE"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<Left Contraction F = A \[LeftTee] B \[LeftTee] E \[Congruent] (A \
\[LeftTee] B) \[LeftTee] E = \>\"", ",", "clifF", ",", 
      "\"\<  (Not associative)\>\""}], "]"}], ";"}], " ", "\n", 
   RowBox[{
    RowBox[{"clifG", "=", 
     RowBox[{"clifE", " ", "\[RightTee]", " ", 
      RowBox[{"clifB", "\[RightTee]", " ", "clifA"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<Right Contraction G = E \[RightTee] B \[RightTee] A = \[Congruent] \
(E \[LeftTee] B) \[LeftTee] A = \>\"", ",", "clifG", ",", 
      "\"\<  (Not associative)\>\""}], "]"}], ";", 
    RowBox[{"Print", "[", "]"}], ";"}], " ", "\n", "\n", 
   RowBox[{
    RowBox[{
    "Print", "[", 
     "\"\<Scalar products, Dot products, and the various contractions have \
been defined in this package to allow more than just 2 multivectors,\>\"", 
     "]"}], ";"}], " ", "\n", 
   RowBox[{
    RowBox[{
    "Print", "[", 
     "\"\<They work left to right and are not associative. When in doubt, use \
parentheses.\>\"", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", "]"}], ";", 
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<Also note that \!\(\*SubscriptBox[\(e\), \
\(1\)]\)\[Diamond]\!\(\*SubscriptBox[\(e\), \
\(2\)]\)\[Diamond]\!\(\*SubscriptBox[\(e\), \(1\)]\) and (\!\(\*SubscriptBox[\
\(e\), \(1\)]\)\!\(\*SubscriptBox[\(e\), \
\(2\)]\))\[Diamond]\!\(\*SubscriptBox[\(e\), \(1\)]\) both yield \
-\!\(\*SubscriptBox[\(e\), \(2\)]\) but \!\(\*SubscriptBox[\(e\), \
\(1\)]\)\!\(\*SubscriptBox[\(e\), \(2\)]\)\[Diamond]\!\(\*SubscriptBox[\(e\), \
\(1\)]\) and \>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(e\), \(1\)]\)(\!\(\*SubscriptBox[\(e\), \
\(2\)]\)\[Diamond]\!\(\*SubscriptBox[\(e\), \(1\)]\)) yield \
-\!\(\*SuperscriptBox[SubscriptBox[\(e\), \(1\)], \(2\)]\)\!\(\*SubscriptBox[\
\(e\), \(2\)]\) because Mathematica multiplication is not \
geometric-algebra-aware.\>\""}], "]"}], ";", 
    RowBox[{
    "Print", "[", 
     "\"\<The ReduceG command is provided in order to aid Mathematica \
multiplications you perform.\>\"", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<   ReduceG[\!\(\*SubscriptBox[\(e\), \(1\)]\)\!\(\*SubscriptBox[\(e\
\), \(2\)]\)\[Diamond]\!\(\*SubscriptBox[\(e\), \(1\)]\)] = \>\"", ",", 
      RowBox[{"ReduceG", "[", 
       RowBox[{
        SubscriptBox["e", "1"], 
        RowBox[{
         SubscriptBox["e", "2"], "\[Diamond]", 
         SubscriptBox["e", "1"]}]}], "]"}]}], "]"}], ";", 
    RowBox[{
    "Print", "[", 
     "\"\<Alternatively, you could apply either ExpandG or CollectG:\>\"", 
     "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<   ExpandG[\!\(\*SubscriptBox[\(e\), \(1\)]\)\!\(\*SubscriptBox[\(e\
\), \(2\)]\)\[Diamond]\!\(\*SubscriptBox[\(e\), \(1\)]\)] = \>\"", ",", 
      RowBox[{"ExpandG", "[", 
       RowBox[{
        SubscriptBox["e", "1"], 
        RowBox[{
         SubscriptBox["e", "2"], "\[Diamond]", 
         SubscriptBox["e", "1"]}]}], "]"}]}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<   CollectG[\!\(\*SubscriptBox[\(e\), \
\(1\)]\)\!\(\*SubscriptBox[\(e\), \(2\)]\)\[Diamond]\!\(\*SubscriptBox[\(e\), \
\(1\)]\)] = \>\"", ",", 
      RowBox[{"CollectG", "[", 
       RowBox[{
        SubscriptBox["e", "1"], 
        RowBox[{
         SubscriptBox["e", "2"], "\[Diamond]", 
         SubscriptBox["e", "1"]}]}], "]"}]}], "]"}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"p", " ", "SLICES"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", "]"}], ";", 
    RowBox[{"Print", "[", 
     RowBox[{"Style", "[", 
      RowBox[{"\"\<p SLICES\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"Bold", ",", "Blue"}], "}"}]}], "]"}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
    "Print", "[", 
     "\"\<We invent the term p-slice in order to refer to the grade p terms \
of a multivector. Multivectors B, W, and P are as defined just above.\>\"", 
     "]"}], ";", 
    RowBox[{"Print", "[", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"slice10", "=", 
     RowBox[{"pSliceG", "[", 
      RowBox[{"clifB", ",", "0"}], "]"}]}], ";", " ", 
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<<B\!\(\*SubscriptBox[\(>\), \(0\)]\) = \>\"", ",", "slice10"}], 
     "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"slice11", "=", 
     RowBox[{"pSliceG", "[", 
      RowBox[{"clifB", ",", "1"}], "]"}]}], ";", " ", 
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<<B\!\(\*SubscriptBox[\(>\), \(1\)]\) = \>\"", ",", "slice11"}], 
     "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"slice12", "=", 
     RowBox[{"pSliceG", "[", 
      RowBox[{"clifB", ",", "2"}], "]"}]}], ";", " ", 
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<<B\!\(\*SubscriptBox[\(>\), \(2\)]\) = \>\"", ",", "slice12"}], 
     "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"slice20", "=", 
     RowBox[{"pSliceG", "[", 
      RowBox[{"clifW", ",", "0"}], "]"}]}], ";", 
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<<W\!\(\*SubscriptBox[\(>\), \(0\)]\) = \>\"", ",", "slice20"}], 
     "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"slice21", "=", 
     RowBox[{"pSliceG", "[", 
      RowBox[{"clifW", ",", "1"}], "]"}]}], ";", 
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<<W\!\(\*SubscriptBox[\(>\), \(1\)]\) = \>\"", ",", "slice21"}], 
     "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"slice22", "=", 
     RowBox[{"pSliceG", "[", 
      RowBox[{"clifW", ",", "2"}], "]"}]}], ";", 
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<<W\!\(\*SubscriptBox[\(>\), \(2\)]\) = \>\"", ",", "slice22"}], 
     "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"slice23", "=", 
     RowBox[{"pSliceG", "[", 
      RowBox[{"clifW", ",", "3"}], "]"}]}], ";", 
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<<W\!\(\*SubscriptBox[\(>\), \(3\)]\) = \>\"", ",", "slice23"}], 
     "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"slice24", "=", 
     RowBox[{"pSliceG", "[", 
      RowBox[{"clifW", ",", "4"}], "]"}]}], ";", 
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<<W\!\(\*SubscriptBox[\(>\), \(4\)]\) = \>\"", ",", "slice24"}], 
     "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"slice30", "=", 
     RowBox[{"pSliceG", "[", 
      RowBox[{"clifP", ",", "0"}], "]"}]}], ";", 
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<<P\!\(\*SubscriptBox[\(>\), \(0\)]\) = \>\"", ",", "slice30"}], 
     "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"slice31", "=", 
     RowBox[{"pSliceG", "[", 
      RowBox[{"clifP", ",", "1"}], "]"}]}], ";", 
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<<P\!\(\*SubscriptBox[\(>\), \(1\)]\) = \>\"", ",", "slice31"}], 
     "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"slice32", "=", 
     RowBox[{"pSliceG", "[", 
      RowBox[{"clifP", ",", "2"}], "]"}]}], ";", 
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<<P\!\(\*SubscriptBox[\(>\), \(2\)]\) = \>\"", ",", "slice32"}], 
     "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"slice33", "=", 
     RowBox[{"pSliceG", "[", 
      RowBox[{"clifP", ",", "3"}], "]"}]}], ";", 
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<<P\!\(\*SubscriptBox[\(>\), \(3\)]\) = \>\"", ",", "slice33"}], 
     "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"slice34", "=", 
     RowBox[{"pSliceG", "[", 
      RowBox[{"clifP", ",", "4"}], "]"}]}], ";", 
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<<P\!\(\*SubscriptBox[\(>\), \(4\)]\) = \>\"", ",", "slice34"}], 
     "]"}], ";"}], " ", "\n", "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"KEYBOARD", " ", "input", " ", "AIDS"}], " ", "*)"}], "\n", "\n", 
   
   RowBox[{
    RowBox[{"x", "=."}], ";", 
    RowBox[{"y", "=."}], ";", 
    RowBox[{"z", "=."}], ";", 
    RowBox[{"a", "=."}], ";", 
    RowBox[{"b", "=."}], ";", 
    RowBox[{"c", "=."}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
    "Print", "[", 
     "\"\<Use the command PseudoScalarG to generate a pseudoscalar, a special \
blade:\>\"", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<     \>\"", ",", 
      RowBox[{"PseudoScalarG", "[", "5", "]"}]}], "]"}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"Print", "[", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"Style", "[", 
      RowBox[{
      "\"\<Keyboard Inputs Aids: COMMANDS THAT SIMPLIFY TEDIOUS TYPING\>\"", 
       ",", 
       RowBox[{"{", 
        RowBox[{"Bold", ",", "Blue"}], "}"}]}], "]"}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
    "Print", "[", 
     "\"\<We use this section to clarify multivector defintions used in this \
package.\>\"", "]"}], ";", 
    RowBox[{
    "Print", "[", 
     "\"\<This terminology is also summarized in the spreadsheet 'Multivector \
Terminology'\>\"", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", "]"}], ";", 
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<The \!\(\*StyleBox[\"basis\",FontWeight->\"Bold\",FontColor->\
RGBColor[1, 0, 1]]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontColor->RGBColor[1, 0, \
1]]\)\!\(\*StyleBox[\"elements\",FontWeight->\"Bold\",FontColor->RGBColor[1, \
0, 1]]\)\!\(\*StyleBox[\",\",FontWeight->\"Plain\",FontColor->GrayLevel[0]]\)\
\!\(\*StyleBox[\" \
\",FontWeight->\"Plain\",FontColor->GrayLevel[0]]\)\!\(\*StyleBox[\"or\",\
FontWeight->\"Plain\",FontColor->GrayLevel[0]]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Plain\",FontColor->GrayLevel[0]]\)\!\(\*StyleBox[\"what\",\
FontWeight->\"Plain\",FontColor->GrayLevel[0]]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Plain\",FontColor->GrayLevel[0]]\)\!\(\*StyleBox[\"I\",\
FontWeight->\"Plain\",FontColor->GrayLevel[0]]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Plain\",FontColor->GrayLevel[0]]\)\!\(\*StyleBox[\"call\",\
FontWeight->\"Plain\",FontColor->GrayLevel[0]]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontColor->RGBColor[1, 0, 1]]\)\!\(\*StyleBox[\"atoms\
\",FontWeight->\"Bold\",FontColor->RGBColor[1, 0, \
1]]\)\!\(\*StyleBox[\",\",FontWeight->\"Bold\",FontColor->RGBColor[1, 0, \
1]]\) of a multivector are terms like \!\(\*SubscriptBox[\(e\), \(2\)]\), \
\!\(\*SubscriptBox[\(e\), \(1\)]\)\!\(\*SubscriptBox[\(e\), \(3\)]\), \
\!\(\*SubscriptBox[\(e\), \(2\)]\)\!\(\*SubscriptBox[\(e\), \
\(3\)]\)\!\(\*SubscriptBox[\(e\), \(4\)]\). Mathematica will rearrange it if \
you try to type in \!\(\*SubscriptBox[\(e\), \
\(4\)]\)\!\(\*SubscriptBox[\(e\), \(3\)]\)\!\(\*SubscriptBox[\(e\), \(2\)]\): \
  \>\"", ",", " ", 
      RowBox[{
       SubscriptBox["e", "4"], 
       SubscriptBox["e", "3"], 
       SubscriptBox["e", "2"]}]}], "]"}], ";", " ", 
    RowBox[{
    "Print", "[", 
     "\"\<Because of this, this package will always put the \
\!\(\*SubscriptBox[\(e\), \(i\)]\)'s in order. To indicate \
\!\(\*SubscriptBox[\(e\), \(2\)]\)\!\(\*SubscriptBox[\(e\), \(1\)]\) this \
package will output -\!\(\*SubscriptBox[\(e\), \(1\)]\)\!\(\*SubscriptBox[\(e\
\), \(2\)]\)\>\"", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<For convenience of generating atoms, you can use the \
\!\(\*StyleBox[\"AtomG\",FontWeight->\"Plain\",FontColor->GrayLevel[0]]\) \
command to generate any (positive) basis element. For example, \
\!\(\*StyleBox[\"AtomG\",FontWeight->\"Bold\",FontColor->RGBColor[1, 0.5, \
0.5]]\)\!\(\*StyleBox[\"[\",FontWeight->\"Bold\",FontColor->RGBColor[1, 0.5, \
0.5]]\)\!\(\*StyleBox[\"2\",FontWeight->\"Bold\",FontColor->RGBColor[1, 0.5, \
0.5]]\)\!\(\*StyleBox[\",\",FontWeight->\"Bold\",FontColor->RGBColor[1, 0.5, \
0.5]]\)\!\(\*StyleBox[\"4\",FontWeight->\"Bold\",FontColor->RGBColor[1, 0.5, \
0.5]]\)\!\(\*StyleBox[\",\",FontWeight->\"Bold\",FontColor->RGBColor[1, 0.5, \
0.5]]\)\!\(\*StyleBox[\"6\",FontWeight->\"Bold\",FontColor->RGBColor[1, 0.5, \
0.5]]\)\!\(\*StyleBox[\"]\",FontWeight->\"Bold\",FontColor->RGBColor[1, 0.5, \
0.5]]\) = \>\"", ",", 
      RowBox[{"AtomG", "[", 
       RowBox[{"2", ",", "4", ",", "6"}], "]"}]}], "]"}], ";", 
    RowBox[{"Print", "[", "]"}], ";", 
    RowBox[{
    "Print", "[", 
     "\"\<A \!\(\*StyleBox[\"blade\",FontWeight->\"Bold\",FontColor->RGBColor[\
1, 0, 1]]\) is a scalar, a vector, or a wedge product of vectors. If the \
blade is of grade r, it is also called a simple r-vector. We will just refer \
to it as a blade.\>\"", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", "]"}], ";", 
    RowBox[{
    "Print", "[", "\"\<Thus, vectors, by definition (above), are blades\>\"", 
     "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<   \!\(\*StyleBox[\"VectorG\",FontWeight->\"Bold\",FontColor->\
RGBColor[1, 0.5, \
0.5]]\)\!\(\*StyleBox[\"[\",FontWeight->\"Bold\",FontColor->RGBColor[1, 0.5, \
0.5]]\)\!\(\*StyleBox[\"a\",FontWeight->\"Bold\",FontColor->RGBColor[1, 0.5, \
0.5]]\)\!\(\*StyleBox[\",\",FontWeight->\"Bold\",FontColor->RGBColor[1, 0.5, \
0.5]]\)\!\(\*StyleBox[\"3\",FontWeight->\"Bold\",FontColor->RGBColor[1, 0.5, \
0.5]]\)\!\(\*StyleBox[\"]\",FontWeight->\"Bold\",FontColor->RGBColor[1, 0.5, \
0.5]]\), is a standard vector in 3 dimensions: \>\"", ",", 
      RowBox[{"VectorG", "[", 
       RowBox[{"a", ",", "3"}], "]"}]}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", "]"}], ";", 
    RowBox[{
    "Print", "[", 
     "\"\<A \!\(\*StyleBox[\"bivector\",FontWeight->\"Bold\",FontColor->\
RGBColor[1, 0, 1]]\), also called a \
\!\(\*StyleBox[\"blade\",FontWeight->\"Bold\",FontColor->RGBColor[1, 0, 1]]\)\
\!\(\*StyleBox[\",\",FontWeight->\"Plain\",FontColor->GrayLevel[0]]\)\!\(\*\
StyleBox[\" \
\",FontWeight->\"Plain\",FontColor->GrayLevel[0]]\)\!\(\*StyleBox[\"or\",\
FontWeight->\"Plain\",FontColor->GrayLevel[0]]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Plain\",FontColor->GrayLevel[0]]\)\!\(\*StyleBox[\"2\",\
FontWeight->\"Bold\",FontColor->RGBColor[1, 0, \
1]]\)\!\(\*StyleBox[\"-\",FontWeight->\"Bold\",FontColor->RGBColor[1, 0, \
1]]\)\!\(\*StyleBox[\"blade\",FontWeight->\"Bold\",FontColor->RGBColor[1, 0, \
1]]\), is a wedge product of 2 vectors. In 3 dimensions this is\>\"", "]"}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<   \!\(\*StyleBox[\"BiVector\",FontWeight->\"Bold\",FontColor->\
RGBColor[1, 0.5, \
0.5]]\)\!\(\*StyleBox[\"[\",FontWeight->\"Bold\",FontColor->RGBColor[1, 0.5, \
0.5]]\)\!\(\*StyleBox[\"3\",FontWeight->\"Bold\",FontColor->RGBColor[1, 0.5, \
0.5]]\)\!\(\*StyleBox[\"]\",FontWeight->\"Bold\",FontColor->RGBColor[1, 0.5, \
0.5]]\) = \>\"", ",", 
      RowBox[{
       RowBox[{"VectorG", "[", 
        RowBox[{"a", ",", "3"}], "]"}], "\[Wedge]", 
       RowBox[{"VectorG", "[", 
        RowBox[{"b", ",", "3"}], "]"}]}]}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
    "Print", "[", 
     "\"\<A \!\(\*StyleBox[\"trivector\",FontWeight->\"Bold\",FontColor->\
RGBColor[1, 0, 1]]\), or \
\!\(\*StyleBox[\"3\",FontWeight->\"Bold\",FontColor->RGBColor[1, 0, 1]]\)\!\(\
\*StyleBox[\"-\",FontWeight->\"Bold\",FontColor->RGBColor[1, 0, \
1]]\)\!\(\*StyleBox[\"blade\",FontWeight->\"Bold\",FontColor->RGBColor[1, 0, \
1]]\), is a wedge product of 3 vectors. In 4 dimensions it is VectorG[a,4]\
\[Wedge]VectorG[b,4]\[Wedge]VectorG[c,4] = \>\"", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<   \>\"", ",", 
      RowBox[{
       RowBox[{"VectorG", "[", 
        RowBox[{"a", ",", "4"}], "]"}], "\[Wedge]", 
       RowBox[{"VectorG", "[", 
        RowBox[{"b", ",", "4"}], "]"}], "\[Wedge]", 
       RowBox[{"VectorG", "[", 
        RowBox[{"c", ",", "4"}], "]"}]}]}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
    "Print", "[", 
     "\"\<In 3 dimensions a trivector is simply a scalar times the \
pseudovector\>\"", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<   \>\"", ",", 
      RowBox[{
       RowBox[{"VectorG", "[", 
        RowBox[{"a", ",", "3"}], "]"}], "\[Wedge]", 
       RowBox[{"VectorG", "[", 
        RowBox[{"b", ",", "3"}], "]"}], "\[Wedge]", 
       RowBox[{"VectorG", "[", 
        RowBox[{"c", ",", "3"}], "]"}]}]}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", "]"}], ";", 
    RowBox[{
    "Print", "[", 
     "\"\<TriVectors, QuadVectors, etc. are blades of grade 3, 4, etc. Rather \
than define TrivectorG, QuadVectorG, etc., we define a single function, \
\!\(\*StyleBox[\"BladeG\",FontWeight->\"Bold\",FontColor->RGBColor[1, 0.5, \
0.5]]\)\!\(\*StyleBox[\"[\",FontWeight->\"Bold\",FontColor->RGBColor[1, 0.5, \
0.5]]\)\!\(\*StyleBox[\"p\",FontWeight->\"Bold\",FontColor->RGBColor[1, 0.5, \
0.5]]\)\!\(\*StyleBox[\",\",FontWeight->\"Bold\",FontColor->RGBColor[1, 0.5, \
0.5]]\)\!\(\*StyleBox[\"n\",FontWeight->\"Bold\",FontColor->RGBColor[1, 0.5, \
0.5]]\)\!\(\*StyleBox[\"]\",FontWeight->\"Bold\",FontColor->RGBColor[1, 0.5, \
0.5]]\), the product of p vectors in n dimensions. For example, BladeG[3,4] \
is the trivector just above, a product of three vectors in 4 dimensions: \
\>\"", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<   \>\"", ",", 
      RowBox[{"BladeG", "[", 
       RowBox[{"3", ",", "4"}], "]"}]}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", "]"}], ";", 
    RowBox[{
    "Print", "[", 
     "\"\<Vectors and blades are special cases of \
\!\(\*StyleBox[\"multivectors\",FontWeight->\"Bold\",FontColor->RGBColor[1, \
0, 1]]\), or \
\!\(\*StyleBox[\"clifs\",FontWeight->\"Bold\",FontColor->RGBColor[1, 0, \
1]]\). 'Clif' is shorter so we write our function 'ClifG'.\>\"", "]"}], ";", 
    " ", 
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<x = \!\(\*StyleBox[\"ClifG\",FontWeight->\"Bold\",FontColor->\
RGBColor[1, 0.5, \
0.5]]\)\!\(\*StyleBox[\"[\",FontWeight->\"Bold\",FontColor->RGBColor[1, 0.5, \
0.5]]\)\!\(\*StyleBox[\"a\",FontWeight->\"Bold\",FontColor->RGBColor[1, 0.5, \
0.5]]\)\!\(\*StyleBox[\",\",FontWeight->\"Bold\",FontColor->RGBColor[1, 0.5, \
0.5]]\)\!\(\*StyleBox[\"3\",FontWeight->\"Bold\",FontColor->RGBColor[1, 0.5, \
0.5]]\)\!\(\*StyleBox[\"]\",FontWeight->\"Bold\",FontColor->RGBColor[1, 0.5, \
0.5]]\) is a general n-dimensional multivector (a.k.a. clif): \>\"", ",", 
      RowBox[{"x", "=", 
       RowBox[{"ClifG", "[", 
        RowBox[{"a", ",", "3"}], "]"}]}]}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", "]"}], ";", 
    RowBox[{
    "Print", "[", 
     "\"\<\!\(\*StyleBox[\"EvenClifG\",FontWeight->\"Bold\",FontColor->\
RGBColor[1, 0.5, \
0.5]]\)\!\(\*StyleBox[\"[\",FontWeight->\"Bold\",FontColor->RGBColor[1, 0.5, \
0.5]]\)\!\(\*StyleBox[\"b\",FontWeight->\"Bold\",FontColor->RGBColor[1, 0.5, \
0.5]]\)\!\(\*StyleBox[\",\",FontWeight->\"Bold\",FontColor->RGBColor[1, 0.5, \
0.5]]\)\!\(\*StyleBox[\"5\",FontWeight->\"Bold\",FontColor->RGBColor[1, 0.5, \
0.5]]\)\!\(\*StyleBox[\"]\",FontWeight->\"Bold\",FontColor->RGBColor[1, 0.5, \
0.5]]\) is a general multivector of even grade in 5 dimensions:\>\"", "]"}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<   \>\"", ",", 
      RowBox[{"EvenClifG", "[", 
       RowBox[{"b", ",", "5"}], "]"}]}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
    "Print", "[", 
     "\"\<Sometime we wish to examine just grade-p terms. There are two \
functions for this. First, we coin the term \
\!\(\*StyleBox[\"slice\",FontWeight->\"Bold\",FontColor->RGBColor[1, 0, 1]]\) \
to denote the grade-p portion of a clif. The grade-2 portion of  ClifG[a,3] \
(just above) is \>\"", "]"}], ";"}], 
   StyleBox["\n",
    FontWeight->"Plain",
    FontColor->GrayLevel[0]], 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<     \
\!\(\*StyleBox[\"pSliceG\",FontWeight->\"Bold\",FontColor->RGBColor[1, 0.5, \
0.5]]\)\!\(\*StyleBox[\"[\",FontWeight->\"Bold\",FontColor->RGBColor[1, 0.5, \
0.5]]\)\!\(\*StyleBox[\"x\",FontWeight->\"Bold\",FontColor->RGBColor[1, 0.5, \
0.5]]\)\!\(\*StyleBox[\",\",FontWeight->\"Bold\",FontColor->RGBColor[1, 0.5, \
0.5]]\)\!\(\*StyleBox[\"2\",FontWeight->\"Bold\",FontColor->RGBColor[1, 0.5, \
0.5]]\)\!\(\*StyleBox[\"]\",FontWeight->\"Bold\",FontColor->RGBColor[1, 0.5, \
0.5]]\) = \>\"", ",", 
      RowBox[{"pSliceG", "[", 
       RowBox[{"x", ",", "2"}], "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"Print", "[", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", "\"\<Secondly, \>\"", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<     \
\!\(\*StyleBox[\"GradedClifG\",FontWeight->\"Bold\",FontColor->RGBColor[1, \
0.5, 0.5]]\)\!\(\*StyleBox[\"[\",FontWeight->\"Bold\",FontColor->RGBColor[1, \
0.5, 0.5]]\)\!\(\*StyleBox[\"a\",FontWeight->\"Bold\",FontColor->RGBColor[1, \
0.5, 0.5]]\)\!\(\*StyleBox[\",\",FontWeight->\"Bold\",FontColor->RGBColor[1, \
0.5, 0.5]]\)\!\(\*StyleBox[\"2\",FontWeight->\"Bold\",FontColor->RGBColor[1, \
0.5, 0.5]]\)\!\(\*StyleBox[\",\",FontWeight->\"Bold\",FontColor->RGBColor[1, \
0.5, 0.5]]\)\!\(\*StyleBox[\"3\",FontWeight->\"Bold\",FontColor->RGBColor[1, \
0.5, 0.5]]\)\!\(\*StyleBox[\"]\",FontWeight->\"Bold\",FontColor->RGBColor[1, \
0.5, 0.5]]\) = \>\"", ",", 
      StyleBox[
       RowBox[{"GradedClifG", "[", 
        RowBox[{"a", ",", "2", ",", "3"}], "]"}],
       FontWeight->"Plain"]}], 
     StyleBox["]",
      FontWeight->"Plain"]}], 
    StyleBox[";",
     FontWeight->"Plain"]}], 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Plain"], 
   RowBox[{
    RowBox[{
    "Print", "[", 
     "\"\<is a general grade-2 multivector in 3 dimensions. \
GradedClifG[a,2,3] is similar to BiVector[3] (or Blade[2,3]) except that it \
has simpler, generic coefficients \!\(\*SubscriptBox[\(a\), \(i, j\)]\). In \
general, GradedClifG[a,p,n] is not a blade (i.e., not a bivector) but a sum \
of blades. This is especially true for n \[GreaterEqual] 6 but also sometimes \
true in lower dimensions. One can use Mathematica along with this package to \
observe this.\>\"", "]"}], ";"}], " ", "\n", 
   RowBox[{
    RowBox[{"Print", "[", "]"}], ";", 
    RowBox[{
    "Print", "[", 
     "\"\<\!\(\*StyleBox[\"Gorm\",FontWeight->\"Bold\",FontColor->RGBColor[1, \
0, 1]]\) is the square of the norm of a multivector. For the general clif x \
defned above it is just what we would expect:\>\"", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<   \!\(\*StyleBox[\"Gorm\",FontWeight->\"Bold\",FontColor->RGBColor[\
1, 0.5, 0.5]]\)\!\(\*StyleBox[\"[\",FontWeight->\"Bold\",FontColor->RGBColor[\
1, 0.5, 0.5]]\)\!\(\*StyleBox[\"x\",FontWeight->\"Bold\",FontColor->RGBColor[\
1, 0.5, 0.5]]\)\!\(\*StyleBox[\"]\",FontWeight->\"Bold\",FontColor->RGBColor[\
1, 0.5, 0.5]]\) = \>\"", ",", 
      RowBox[{"GormG", "[", "x", "]"}]}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"x", "=."}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", "]"}], ";", 
    RowBox[{"Print", "[", 
     RowBox[{"\"\<clifA = \>\"", ",", 
      RowBox[{"clifA", "=", 
       RowBox[{
        RowBox[{"5", " ", 
         SubscriptBox["e", "1"]}], "+", 
        RowBox[{"7", 
         SubscriptBox["e", "2"], 
         SubscriptBox["e", "3"]}], "-", 
        RowBox[{
         RowBox[{"\[Sqrt]", "11"}], 
         SubscriptBox["e", "1"]}]}]}], ",", 
      "\"\< is an example of an expanded multivector (i.e., \
ungrouped).\>\""}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<Use \!\(\*StyleBox[\"CollectG\",FontWeight->\"Bold\",FontColor->\
RGBColor[1, 0.5, \
0.5]]\)\!\(\*StyleBox[\"[\",FontWeight->\"Bold\",FontColor->RGBColor[1, 0.5, \
0.5]]\)\!\(\*StyleBox[\"clifA\",FontWeight->\"Bold\",FontColor->RGBColor[1, \
0.5, 0.5]]\)\!\(\*StyleBox[\"]\",FontWeight->\"Bold\",FontColor->RGBColor[1, \
0.5, 0.5]]\) to collect (i.e., group) the terms of A for better readability: \
\>\"", ",", 
      RowBox[{"CollectG", "[", "clifA", "]"}]}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
    "Print", "[", 
     "\"\<This package attempts to generate 'collected' clifs but if the \
result of some complex\ncalculation is unsorted, you may may need to use the \
CollectG command to do your own collection.\>\"", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<CollectG is similar to Mathematica's Collect command but is \
atom-aware and thus\>\"", ",", " ", "\n", "\t\t", 
      "\"\<can group terms by atoms. Before collecting, it also first reduces \
\>\"", ",", " ", "\n", "\t\t", 
      "\"\<powers of \!\(\*SubscriptBox[\(e\), \(i\)]\) should any \
remain.\>\""}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<\!\(\*StyleBox[\"AtomCoefG\",FontWeight->\"Bold\",FontColor->\
RGBColor[1, 0.5, \
0.5]]\)\!\(\*StyleBox[\"{\",FontWeight->\"Bold\",FontColor->RGBColor[1, 0.5, \
0.5]]\)\!\(\*StyleBox[\"clif\",FontWeight->\"Bold\",FontColor->RGBColor[1, \
0.5, 0.5]]\)\!\(\*StyleBox[\"]\",FontWeight->\"Bold\",FontColor->RGBColor[1, \
0.5, 0.5]]\) can be used to find the coefficient(s) in a multivector of a \n\
specific atom. For example, AtomCoefG[clifA,\!\(\*SubscriptBox[\(e\), \
\(1\)]\)] = \>\"", ",", 
      RowBox[{"AtomCoefG", "[", 
       RowBox[{"clifA", ",", 
        SubscriptBox["e", "1"]}], "]"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{
    "\"\<The file 'Example Formatted Output' shows how the \
\!\(\*StyleBox[\"AtomCoefG\",FontWeight->\"Plain\",FontColor->GrayLevel[0]]\)\
\!\(\*StyleBox[\" \",FontColor->GrayLevel[0]]\)function\>\"", ",", 
     "\"\< can be used to extract coefficients of atoms to make a nicely \
formatted table of results.\>\""}], "]"}], "  ", "\n", 
   RowBox[{
    RowBox[{"clifB", "=", 
     RowBox[{"6", " ", "+", " ", 
      SubscriptBox["e", "1"], " ", "+", " ", 
      RowBox[{"2", 
       SubscriptBox["e", "1"], 
       SubscriptBox["e", "2"]}], " ", "+", 
      RowBox[{"3", " ", 
       SubscriptBox["e", "1"], 
       SubscriptBox["e", "2"], 
       SubscriptBox["e", "3"]}], " ", "+", 
      RowBox[{"4", 
       SubscriptBox["e", "1"], 
       SubscriptBox["e", "2"], 
       SubscriptBox["e", "3"], 
       SubscriptBox["e", "4"]}], " ", "+", 
      RowBox[{
       RowBox[{"\[Sqrt]", "5"}], " ", 
       SubscriptBox["e", "1"], 
       SubscriptBox["e", "2"], 
       SubscriptBox["e", "3"], 
       SubscriptBox["e", "4"], 
       SubscriptBox["e", "5"]}], "+", " ", 
      RowBox[{"6", " ", 
       SubscriptBox["e", "1"], 
       SubscriptBox["e", "2"], 
       SubscriptBox["e", "3"], 
       SubscriptBox["e", "4"], 
       SubscriptBox["e", "5"], 
       SubscriptBox["e", "6"]}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", "]"}], ";", 
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Let clifB = \>\"", ",", "clifB", ",", "\"\<.\>\""}], "]"}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{
    "Print", "[", 
     "\"\<\!\(\*StyleBox[\"ReverseG\",FontWeight->\"Bold\",FontColor->\
RGBColor[1, 0.5, \
0.5]]\)\!\(\*StyleBox[\"[\",FontWeight->\"Bold\",FontColor->RGBColor[1, 0.5, \
0.5]]\)\!\(\*StyleBox[\"clifB\",FontWeight->\"Bold\",FontColor->RGBColor[1, \
0.5, 0.5]]\)\!\(\*StyleBox[\"]\",FontWeight->\"Bold\",FontColor->RGBColor[1, \
0.5, 0.5]]\) = 6 + \!\(\*SubscriptBox[\(e\), \(\(1\)\(\\\ \\\ \)\)]\)+ \
2\!\(\*SubscriptBox[\(e\), \(2\)]\)\!\(\*SubscriptBox[\(e\), \(\(1\)\(\\\ \\\ \
\)\)]\)+ 3\!\(\*SubscriptBox[\(e\), \(3\)]\)\!\(\*SubscriptBox[\(e\), \
\(2\)]\)\!\(\*SubscriptBox[\(e\), \(\(1\)\(\\\ \)\)]\)+ \
4\!\(\*SubscriptBox[\(e\), \(4\)]\)\!\(\*SubscriptBox[\(e\), \
\(3\)]\)\!\(\*SubscriptBox[\(e\), \(2\)]\)\!\(\*SubscriptBox[\(e\), \(\(1\)\(\
\\\ \)\)]\)+ \[Sqrt]5\!\(\*SubscriptBox[\(e\), \(5\)]\)\!\(\*SubscriptBox[\(e\
\), \(4\)]\)\!\(\*SubscriptBox[\(e\), \(3\)]\)\!\(\*SubscriptBox[\(e\), \
\(2\)]\)\!\(\*SubscriptBox[\(e\), \(\(1\)\(\\\ \)\)]\)+ \
6\!\(\*SubscriptBox[\(e\), \(6\)]\)\!\(\*SubscriptBox[\(e\), \
\(5\)]\)\!\(\*SubscriptBox[\(e\), \(4\)]\)\!\(\*SubscriptBox[\(e\), \
\(3\)]\)\!\(\*SubscriptBox[\(e\), \(2\)]\)\!\(\*SubscriptBox[\(e\), \
\(1\)]\)\>\"", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<Mathematica automatically rewrites products like \
\!\(\*SubscriptBox[\(e\), \(2\)]\)\!\(\*SubscriptBox[\(e\), \(1\)]\) as \
\!\(\*SubscriptBox[\(e\), \(1\)]\)\!\(\*SubscriptBox[\(e\), \(2\)]\), not \
good since \>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(e\), \(2\)]\)\!\(\*SubscriptBox[\(e\), \(1\)]\
\)=-\!\(\*SubscriptBox[\(e\), \(1\)]\)\!\(\*SubscriptBox[\(e\), \(2\)]\). So \
the ReverseG (and many of the other commands) calculates whether the \>\"", 
      ",", "\"\<reverse is an even or odd permutation and then provides the \
correct sign. Thus, \>\"", ",", 
      "\"\<the ReverseG command actually outputs \>\""}], "]"}], ";"}], "\n", 
   
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<ReverseG[clifB] = \>\"", ",", 
      RowBox[{"ReverseG", "[", "clifB", "]"}]}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", "]"}], ";", 
    RowBox[{
    "Print", "[", 
     "\"\<If you perform, say, multiplication of vectors using Mathematica \
but outside of this package, you can use ReduceG to expand powers of \
\!\(\*SubscriptBox[\(e\), \(i\)]\) according to your initialization scheme.\>\
\"", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<For example, \
\!\(\*StyleBox[\"ReduceG\",FontWeight->\"Bold\",FontColor->RGBColor[1, 0.5, \
0.5]]\)\!\(\*StyleBox[\"[\",FontWeight->\"Bold\",FontColor->RGBColor[1, 0.5, \
0.5]]\)\!\(\*StyleBox[\"5\",FontWeight->\"Bold\",FontColor->RGBColor[1, 0.5, \
0.5]]\)\!\(\*StyleBox[SuperscriptBox[SubscriptBox[\"e\", \"1\"], \
\"2\"],FontWeight->\"Bold\",FontColor->RGBColor[1, 0.5, \
0.5]]\)\!\(\*StyleBox[SuperscriptBox[SubscriptBox[\"e\", \"2\"], \
\"2\"],FontWeight->\"Bold\",FontColor->RGBColor[1, 0.5, \
0.5]]\)\!\(\*StyleBox[\"]\",FontWeight->\"Bold\",FontColor->RGBColor[1, 0.5, \
0.5]]\) = \>\"", ",", 
      RowBox[{"ReduceG", "[", 
       RowBox[{"5", 
        SubsuperscriptBox["e", "1", "2"], " ", 
        SuperscriptBox[
         SubscriptBox["e", "2"], "2"]}], "]"}]}], "  ", "]"}], ";"}], "\n", 
   "\n", "\n", 
   RowBox[{"(*", " ", "LISTS", " ", "*)"}], "\n", "\n", 
   RowBox[{
    RowBox[{"Print", "[", "]"}], ";", 
    RowBox[{"Print", "[", 
     RowBox[{"Style", "[", 
      RowBox[{"\"\<LIST OPERATIONS\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"Bold", ",", "Blue"}], "}"}]}], "]"}], "]"}], ";", 
    RowBox[{
    "Print", "[", 
     "\"\<It is easier to perform mamy operations on multivectors by first \
transforming the multivectors to lists. Most of the functions in this package \
are defined in this manner.\>\"", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
    "Print", "[", 
     "\"\<To aid a user who decides to create additional functions or perform \
certain new operations, I have provided a set of list tools.\>\"", "]"}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{
    "Print", "[", 
     "\"\<First is \
\!\(\*StyleBox[\"ClifToListG\",FontWeight->\"Bold\",FontColor->RGBColor[1, \
0.5, 0.5]]\)\!\(\*StyleBox[\"[\",FontWeight->\"Bold\",FontColor->RGBColor[1, \
0.5, 0.5]]\)\!\(\*StyleBox[\"clif\",FontWeight->\"Bold\",FontColor->RGBColor[\
1, 0.5, 0.5]]\)\!\(\*StyleBox[\"]\",FontWeight->\"Bold\",FontColor->RGBColor[\
1, 0.5, 0.5]]\), which makes a list of the terms of clif. I call this a \
\!\(\*StyleBox[\"clif\",FontWeight->\"Bold\",FontColor->RGBColor[1, 0, \
1]]\)\!\(\*StyleBox[\" \",FontWeight->\"Bold\",FontColor->RGBColor[1, 0, \
1]]\)\!\(\*StyleBox[\"list\",FontWeight->\"Bold\",FontColor->RGBColor[1, 0, \
1]]\). Even if an atom, say \!\(\*SubscriptBox[\(e\), \
\(1\)]\)\!\(\*SubscriptBox[\(e\), \(3\)]\)\!\(\*SubscriptBox[\(e\), \(4\)]\), \
appears multiple times in clif, in the list it appears just once withs its \
coefficients collected.\>\"", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "Print", "[", 
     "\"\<Consider clif = \!\(\*SubscriptBox[\(e\), \(1\)]\) + \
\!\(\*SubscriptBox[\(e\), \(2\)]\) + \!\(\*SubscriptBox[\(e\), \(3\)]\) + \
\!\(\*SubscriptBox[\(e\), \(1\)]\)\!\(\*SubscriptBox[\(e\), \(2\)]\) + \
\!\(\*SubscriptBox[\(e\), \(1\)]\)\!\(\*SubscriptBox[\(e\), \(3\)]\) + \
\!\(\*SubscriptBox[\(e\), \(2\)]\)\!\(\*SubscriptBox[\(e\), \(3\)]\)). \
Mathematica always displays this as\>\"", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<     \>\"", ",", 
      RowBox[{"clif", "=", 
       RowBox[{
        SubscriptBox["e", "1"], "+", 
        SubscriptBox["e", "2"], "+", 
        RowBox[{
         SubscriptBox["e", "1"], " ", 
         SubscriptBox["e", "2"]}], "+", 
        SubscriptBox["e", "3"], "+", 
        RowBox[{
         SubscriptBox["e", "1"], " ", 
         SubscriptBox["e", "3"]}], "+", 
        RowBox[{
         SubscriptBox["e", "2"], " ", 
         SubscriptBox["e", "3"]}]}]}]}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<ClifToListG produces \>\"", ",", 
      RowBox[{"ClifToListG", "[", "clif", "]"}]}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
    "Print", "[", 
     "\"\<Companion lists are \
\!\(\*StyleBox[\"CoeffListG\",FontWeight->\"Bold\",FontColor->RGBColor[1, \
0.5, 0.5]]\) and \
\!\(\*StyleBox[\"AtomListG\",FontWeight->\"Bold\",FontColor->RGBColor[1, 0.5, \
0.5]]\) which provide lists of coefficients and atoms, respectively, that \
match the order and frequency of ClifToListG exactly. In fact, all of the \
lists exactly match the order and frequency of ClifToListG. Thus one is safe \
to take products, dot products, scalar products, etc., and even to divide \
them term-by-term\>\"", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
    "Print", "[", 
     "\"\<Two other matching companion lists are \!\(\*StyleBox[\"GradesListG\
\",FontWeight->\"Bold\",FontColor->RGBColor[1, 0.5, 0.5]]\)\!\(\*StyleBox[\" \
\",FontColor->RGBColor[1, 0.5, 0]]\)and \
\!\(\*StyleBox[\"SubscriptListG\",FontWeight->\"Bold\",FontColor->RGBColor[1, \
0.5, 0.5]]\) that are, respectively, a list of the grades of the terms in \
clif and a list of the subscripts of terms. For example, GradeListG sends \
\!\(\*SubscriptBox[\(e\), \(\(1\)\(\\\ \)\)]\)+ 5\!\(\*SubscriptBox[\(e\), \
\(2\)]\)\!\(\*SubscriptBox[\(e\), \(\(4\)\(\\\ \)\)]\) to { 0, 2 } and \
SubscriptListG sends it to { {1}, {2.4} }.\>\"", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
    "Print", "[", 
     "\"\<\!\(\*StyleBox[\"ListToClifG\",FontWeight->\"Bold\",FontColor->\
RGBColor[1, 0.5, 0.5]]\) actually performs a trivial operation but is \
provided so one doesn't have to think about how to convert a list back to an \
expression.\>\"", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "Print", "[", 
     "\"\<Sometimes it is easier to manipulate a clif list if the atoms are \
condensed to single terms, like \!\(\*SubscriptBox[\(e\), \
\(1\)]\)\!\(\*SubscriptBox[\(e\), \(2\)]\)\!\(\*SubscriptBox[\(e\), \(3\)]\) \
becomes \!\(\*SubscriptBox[\(e\), \(1, 2, 3\)]\). \>\"", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
    "Print", "[", 
     "\"\<I call this an \
\!\(\*StyleBox[\"Eij\",FontWeight->\"Bold\",FontColor->RGBColor[1, 0, 1]]\)\!\
\(\*StyleBox[\" \",FontWeight->\"Bold\",FontColor->RGBColor[1, 0, \
1]]\)\!\(\*StyleBox[\"list\",FontWeight->\"Bold\",FontColor->RGBColor[1, 0, \
1]]\). \!\(\*StyleBox[\"EijListG\",FontWeight->\"Bold\",FontColor->RGBColor[1,\
 0.5, 0.5]]\)\!\(\*StyleBox[\"[\",FontWeight->\"Bold\",FontColor->RGBColor[1, \
0.5, 0.5]]\)\!\(\*StyleBox[\"clif\",FontWeight->\"Bold\",FontColor->RGBColor[\
1, 0.5, 0.5]]\)\!\(\*StyleBox[\"]\",FontWeight->\"Bold\",FontColor->RGBColor[\
1, 0.5, 0.5]]\) transforms clif into this type of list.\>\"", "]"}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{
    "Print", "[", 
     "\"\<Eij lists are useful, for example, when you wish a list to be \
sorted in the natural order of constants followed by singletons \
\!\(\*SubscriptBox[\(e\), \(i\)]\), then pairs \!\(\*SubscriptBox[\(e\), \
\(i\)]\)\!\(\*SubscriptBox[\(e\), \(j\)]\), triples, etc. Again, consider \
clif = \!\(\*SubscriptBox[\(e\), \(1\)]\) + \!\(\*SubscriptBox[\(e\), \
\(2\)]\) + \!\(\*SubscriptBox[\(e\), \(3\)]\) + \!\(\*SubscriptBox[\(e\), \(1\
\)]\)\!\(\*SubscriptBox[\(e\), \(2\)]\) + \!\(\*SubscriptBox[\(e\), \
\(1\)]\)\!\(\*SubscriptBox[\(e\), \(3\)]\) + \!\(\*SubscriptBox[\(e\), \(2\)]\
\)\!\(\*SubscriptBox[\(e\), \(3\)]\).\>\"", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<\!\(\*StyleBox[\"Sort\",FontWeight->\"Bold\",FontColor->RGBColor[1, \
0.5, 0]]\)\!\(\*StyleBox[\"{\",FontWeight->\"Bold\",FontColor->RGBColor[1, \
0.5, 0]]\)\!\(\*StyleBox[\"[\",FontWeight->\"Bold\",FontColor->RGBColor[1, \
0.5, 0]]\)\!\(\*StyleBox[SubscriptBox[\"e\", \
\"1\"],FontWeight->\"Bold\",FontColor->RGBColor[1, 0.5, \
0]]\)\!\(\*StyleBox[\",\",FontWeight->\"Bold\",FontColor->RGBColor[1, 0.5, \
0]]\)\!\(\*SubscriptBox[StyleBox[\"e\",FontWeight->\"Bold\",FontColor->\
RGBColor[1, 0.5, 0]], \
StyleBox[\"2\",FontWeight->\"Bold\",FontColor->RGBColor[1, 0.5, \
0]]]\)\!\(\*StyleBox[\",\",FontWeight->\"Bold\",FontColor->RGBColor[1, 0.5, \
0]]\)\!\(\*StyleBox[SubscriptBox[\"e\", \
\"3\"],FontWeight->\"Bold\",FontColor->RGBColor[1, 0.5, \
0]]\)\!\(\*StyleBox[\",\",FontWeight->\"Bold\",FontColor->RGBColor[1, 0.5, \
0]]\)\!\(\*StyleBox[SubscriptBox[\"e\", \
\"1\"],FontWeight->\"Bold\",FontColor->RGBColor[1, 0.5, \
0]]\)\!\(\*StyleBox[SubscriptBox[\"e\", \
\"2\"],FontWeight->\"Bold\",FontColor->RGBColor[1, 0.5, \
0]]\)\!\(\*StyleBox[\",\",FontWeight->\"Bold\",FontColor->RGBColor[1, 0.5, \
0]]\)\!\(\*StyleBox[SubscriptBox[\"e\", \
\"1\"],FontWeight->\"Bold\",FontColor->RGBColor[1, 0.5, \
0]]\)\!\(\*StyleBox[SubscriptBox[\"e\", \
\"3\"],FontWeight->\"Bold\",FontColor->RGBColor[1, 0.5, \
0]]\)\!\(\*StyleBox[\",\",FontWeight->\"Bold\",FontColor->RGBColor[1, 0.5, \
0]]\)\!\(\*StyleBox[SubscriptBox[\"e\", \
\"2\"],FontWeight->\"Bold\",FontColor->RGBColor[1, 0.5, \
0]]\)\!\(\*StyleBox[SubscriptBox[\"e\", \
\"3\"],FontWeight->\"Bold\",FontColor->RGBColor[1, 0.5, \
0]]\)\!\(\*StyleBox[\"}\",FontWeight->\"Bold\",FontColor->RGBColor[1, 0.5, \
0]]\)\!\(\*StyleBox[\"]\",FontWeight->\"Bold\",FontColor->RGBColor[1, 0.5, \
0]]\) produces \>\"", ",", 
      RowBox[{"Sort", "[", 
       RowBox[{"{", 
        RowBox[{
         SubscriptBox["e", "1"], ",", 
         SubscriptBox["e", "2"], ",", 
         SubscriptBox["e", "3"], ",", 
         RowBox[{
          SubscriptBox["e", "1"], 
          SubscriptBox["e", "2"]}], ",", 
         RowBox[{
          SubscriptBox["e", "1"], " ", 
          SubscriptBox["e", "3"]}], ",", 
         RowBox[{
          SubscriptBox["e", "2"], " ", 
          SubscriptBox["e", "3"]}]}], "}"}], "]"}]}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<But... \
\!\(\*StyleBox[\"Sort\",FontWeight->\"Bold\",FontColor->RGBColor[0.\
1450980392156863, 0.5450980392156862, 0.]]\)\!\(\*StyleBox[\"[\",FontWeight->\
\"Bold\",FontColor->RGBColor[0.1450980392156863, 0.5450980392156862, 0.]]\)\!\
\(\*StyleBox[\"{\",FontWeight->\"Bold\",FontColor->RGBColor[0.\
1450980392156863, 0.5450980392156862, \
0.]]\)\!\(\*StyleBox[SubscriptBox[\"e\", \
\"1\"],FontWeight->\"Bold\",FontColor->RGBColor[0.1450980392156863, \
0.5450980392156862, \
0.]]\)\!\(\*StyleBox[\",\",FontWeight->\"Bold\",FontColor->RGBColor[0.\
1450980392156863, 0.5450980392156862, \
0.]]\)\!\(\*StyleBox[SubscriptBox[\"e\", \
\"2\"],FontWeight->\"Bold\",FontColor->RGBColor[0.1450980392156863, \
0.5450980392156862, \
0.]]\)\!\(\*StyleBox[\",\",FontWeight->\"Bold\",FontColor->RGBColor[0.\
1450980392156863, 0.5450980392156862, \
0.]]\)\!\(\*StyleBox[SubscriptBox[\"e\", \
\"3\"],FontWeight->\"Bold\",FontColor->RGBColor[0.1450980392156863, \
0.5450980392156862, \
0.]]\)\!\(\*StyleBox[\",\",FontWeight->\"Bold\",FontColor->RGBColor[0.\
1450980392156863, 0.5450980392156862, \
0.]]\)\!\(\*StyleBox[SubscriptBox[\"e\", RowBox[{\"1\", \",\", \
\"2\"}]],FontWeight->\"Bold\",FontColor->RGBColor[0.1450980392156863, \
0.5450980392156862, \
0.]]\)\!\(\*StyleBox[\",\",FontWeight->\"Bold\",FontColor->RGBColor[0.\
1450980392156863, 0.5450980392156862, \
0.]]\)\!\(\*StyleBox[SubscriptBox[\"e\", RowBox[{\"1\", \",\", \
\"3\"}]],FontWeight->\"Bold\",FontColor->RGBColor[0.1450980392156863, \
0.5450980392156862, \
0.]]\)\!\(\*StyleBox[\",\",FontWeight->\"Bold\",FontColor->RGBColor[0.\
1450980392156863, 0.5450980392156862, \
0.]]\)\!\(\*StyleBox[SubscriptBox[\"e\", RowBox[{\"2\", \",\", \
\"3\"}]],FontWeight->\"Bold\",FontColor->RGBColor[0.1450980392156863, \
0.5450980392156862, \
0.]]\)\!\(\*StyleBox[\"}\",FontWeight->\"Bold\",FontColor->RGBColor[0.\
1450980392156863, 0.5450980392156862, 0.]]\)\!\(\*StyleBox[\"]\",FontWeight->\
\"Bold\",FontColor->RGBColor[0.1450980392156863, 0.5450980392156862, 0.]]\) \
'correctly' produces \>\"", ",", 
      RowBox[{"Sort", "[", 
       RowBox[{"{", 
        RowBox[{
         SubscriptBox["e", "1"], ",", 
         SubscriptBox["e", "2"], ",", 
         SubscriptBox["e", "3"], ",", 
         SubscriptBox["e", 
          RowBox[{"1", ",", "2"}]], ",", 
         SubscriptBox["e", 
          RowBox[{"1", ",", "3"}]], ",", 
         SubscriptBox["e", 
          RowBox[{"2", ",", "3"}]]}], "}"}], "]"}]}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", "]"}], ";", 
    RowBox[{
    "Print", "[", 
     "\"\<A correctly sorted Eij list can easily be reverted back to a \
corectly sorted clif list because this package provides a converter, \
\!\(\*StyleBox[\"ToClifListG\",FontWeight->\"Bold\",FontColor->RGBColor[1, \
0.5, 0.5]]\)\!\(\*StyleBox[\"[\",FontWeight->\"Bold\",FontColor->RGBColor[1, \
0.5, 0.5]]\)\!\(\*StyleBox[\"eijlist\",FontWeight->\"Bold\",FontColor->\
RGBColor[1, 0.5, \
0.5]]\)\!\(\*StyleBox[\"]\",FontWeight->\"Bold\",FontColor->RGBColor[1, 0.5, \
0.5]]\), that converts an Eij list back to a clif list.\>\"", "]"}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{"Print", "[", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "Print", "[", 
     "\"\<For completeness there is a converter, \
\!\(\*StyleBox[\"ToClifEijListG\",FontWeight->\"Bold\",FontColor->RGBColor[1, \
0.5, 0.5]]\)\!\(\*StyleBox[\"[\",FontWeight->\"Bold\",FontColor->RGBColor[1, \
0.5, 0.5]]\)\!\(\*StyleBox[\"list\",FontWeight->\"Bold\",FontColor->RGBColor[\
1, 0.5, 0.5]]\)\!\(\*StyleBox[\"]\",FontWeight->\"Bold\",FontColor->RGBColor[\
1, 0.5, 0.5]]\), that converts a clif list to \nan Eij list. However, unless \
the clif list is strictly an atom list, as above, Mathematica's Sort function \
may not correctly sort the corresponding Eij list.\>\"", "]"}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<Consider Sort[{\!\(\*SubscriptBox[\(r\), \(1, 4\)]\) \
\!\(\*SubscriptBox[\(e\), \(4\)]\), \!\(\*SubscriptBox[\(p\), \(1\)]\) \
\!\(\*SubscriptBox[\(e\), \(1, 2\)]\)}]. This 'incorrectly' produces \>\"", 
      ",", 
      RowBox[{"Sort", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          SubscriptBox["r", 
           RowBox[{"1", ",", "4"}]], 
          SubscriptBox["e", "4"]}], ",", 
         RowBox[{
          SubscriptBox["p", "2"], 
          SubscriptBox["e", 
           RowBox[{"1", ",", "2"}]]}]}], "}"}], "]"}]}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
    "Print", "[", 
     "\"\<To be able to sort clif Eij lists correctly, this package provides \
a sort for Eij lists: \
\!\(\*StyleBox[\"EijSortG\",FontWeight->\"Bold\",FontColor->RGBColor[1, 0.5, \
0.5]]\)\!\(\*StyleBox[\"[\",FontWeight->\"Bold\",FontColor->RGBColor[1, 0.5, \
0.5]]\)\!\(\*StyleBox[\"eijlist\",FontWeight->\"Bold\",FontColor->RGBColor[1, \
0.5, 0.5]]\)\!\(\*StyleBox[\"]\",FontWeight->\"Bold\",FontColor->RGBColor[1, \
0.5, 0.5]]\):\>\"", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<EijSortG[{\!\(\*SubscriptBox[\(r\), \(1, \
4\)]\)\!\(\*SubscriptBox[\(e\), \(4\)]\), \!\(\*SubscriptBox[\(p\), \
\(2\)]\)\!\(\*SubscriptBox[\(e\), \(1, 2\)]\)}] = \>\"", ",", 
      RowBox[{
       StyleBox["EijSortG",
        FontWeight->"Plain",
        FontColor->GrayLevel[0]], "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          SubscriptBox["r", 
           RowBox[{"1", ",", "4"}]], 
          SubscriptBox["e", "4"]}], ",", 
         RowBox[{
          SubscriptBox["p", "2"], 
          SubscriptBox["e", 
           RowBox[{"1", ",", "2"}]]}]}], "}"}], "]"}]}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
    "Print", "[", 
     "\"\<Finally, the function \
\!\(\*StyleBox[\"SignatureG\",FontWeight->\"Bold\",FontColor->RGBColor[1, \
0.5, 0.5]]\)\!\(\*StyleBox[\"[\",FontWeight->\"Bold\",FontColor->RGBColor[1, \
0.5, 0.5]]\)\!\(\*StyleBox[\"list\",FontWeight->\"Bold\",FontColor->RGBColor[\
1, 0.5, 0.5]]\)\!\(\*StyleBox[\"]\",FontWeight->\"Bold\",FontColor->RGBColor[\
1, 0.5, 0.5]]\) extends Mathematica's Signature function to work even when \
there are repeating elements in the list. Internally, SignatureG is used as \
the key ingredient in calculating geometric products. However, it works over \
the same extensive range of objects as Methematica's Signature function.\>\"",
      "]"}], ";"}], "\n", "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"2", "-", 
     RowBox[{"D", " ", "and", " ", "4"}], "-", 
     RowBox[{"D", " ", "ROTATIONS"}]}], " ", "*)"}], "\n", "\n", 
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{"r", ",", "rr", ",", "\[Theta]", ",", "v", ",", "w"}], "]"}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", "]"}], ";", 
    RowBox[{"Print", "[", 
     RowBox[{"Style", "[", 
      RowBox[{"\"\<ROTATIONS IN 2-SPACE AND 4-SPACE\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"Bold", ",", "Blue"}], "}"}]}], "]"}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", "]"}], ";", 
    RowBox[{"Print", "[", 
     RowBox[{"\"\<r = RotorG[1,2,\[Theta]] = \>\"", ",", 
      RowBox[{"r", "=", 
       RowBox[{"RotorG", "[", 
        RowBox[{"1", ",", "2", ",", "\[Theta]"}], "]"}]}], ",", " ", 
      "\"\<is an example of a 2-D rotor.\>\""}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<\!\(\*SuperscriptBox[\(r\), \(~\)]\) = \>\"", ",", 
      RowBox[{"rr", " ", "=", " ", 
       RowBox[{"ReverseG", "[", 
        RowBox[{"RotorG", "[", 
         RowBox[{"1", ",", "2", ",", "\[Theta]"}], "]"}], "]"}]}], ",", 
      "\"\< is the reverse of the rotor.\>\""}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
    "Print", "[", 
     "\"\<Sandwiching a vector, say  v = \
1/(\[Sqrt]2)(\!\(\*SubscriptBox[\(e\), \(1\)]\) +\!\(\*SubscriptBox[\(e\), \
\(2\)]\)), between the two causes the vector to rotate counter-clockwise by \
\[Theta]:\>\"", "]"}], ";", " ", 
    RowBox[{"v", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"\[Sqrt]", "2"}], ")"}]}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["e", "1"], "+", 
        SubscriptBox["e", "2"]}], ")"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", "\"\<Let \[Theta] = \[Pi]/2. Then\>\"", "]"}], ";", 
    
    RowBox[{"\[Theta]", "=", 
     RowBox[{"\[Pi]", "/", "2"}]}], ";", 
    RowBox[{"r", "=", 
     RowBox[{"Simplify", "[", "r", "]"}]}], ";", 
    RowBox[{"rr", "=", 
     RowBox[{"Simplify", "[", "rr", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<   w = \!\(\*SuperscriptBox[\(r\), \(~\)]\) \[Diamond] v \[Diamond] \
r = \>\"", ",", "  ", 
      RowBox[{"Simplify", "[", 
       RowBox[{"rr", "\[Diamond]", "v", "\[Diamond]", "r"}], "]"}]}], "]"}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<A general 4-D rotor can include additional grade 2 and 4 terms. For \
example,\>\"", ",", 
      "\"\< a 4-D rotor r that is the geometric product of two 2-D rotors, \!\
\(\*SubscriptBox[\(r\), \(1\)]\) and \!\(\*SubscriptBox[\(r\), \
\(2\)]\):\>\""}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<     \!\(\*SubscriptBox[\(r\), \(1\)]\) = \>\"", ",", 
      RowBox[{
       SubscriptBox["r", "1"], "=", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "+", 
        RowBox[{
         RowBox[{"Sin", "[", "\[Theta]", "]"}], 
         SubscriptBox["e", "1"], 
         SubscriptBox["e", "2"]}]}]}]}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<     \!\(\*SubscriptBox[\(r\), \(2\)]\) = \>\"", ",", 
      RowBox[{
       SubscriptBox["r", "2"], "=", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Phi]", "]"}], "+", 
        RowBox[{
         RowBox[{"Sin", "[", "\[Phi]", "]"}], 
         SubscriptBox["e", "3"], 
         SubscriptBox["e", "4"]}]}]}]}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<     r = \>\"", ",", 
      RowBox[{"r", "=", 
       RowBox[{
        SubscriptBox["r", "1"], "\[Diamond]", 
        SubscriptBox["r", "2"]}]}]}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<Of course, the norm of rotor r is 1: NormG[ r ] = \>\"", ",", 
      RowBox[{"NormG", "[", "r", "]"}]}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"r", "=."}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"PITCH", "-", 
     RowBox[{
     "ROLL", " ", "ROTATION", " ", "OF", " ", "AN", " ", "AIRPLANE", " ", 
      "IN", " ", "3"}], "-", 
     RowBox[{
      RowBox[{"SPACE", " ", "--"}], " ", "Clifford", " ", "algebra", " ", 
      "example", "\n", "Assume", " ", "airplane", " ", "is", " ", "flying", 
      " ", "straight", " ", "and", " ", "level", " ", "along", " ", "x", " ", 
      
      RowBox[{"axis", ".", " ", "His"}], " ", "initial", " ", "heading", " ", 
      "vector", " ", "is", " ", "thus", " ", 
      RowBox[{
       SubscriptBox["e", "1"], ".", " ", "Suppose"}], " ", "he", " ", 
      "pitches", " ", "up", " ", "45", "\[Degree]", " ", "followed", " ", 
      "by", " ", "a", " ", "left", " ", "roll", " ", "of", " ", "45", 
      RowBox[{"\[Degree]", ".", " ", "What"}], " ", "is", " ", "his", " ", 
      "new", " ", 
      RowBox[{"heading", "?"}]}]}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", "]"}], ";", 
    RowBox[{"Print", "[", 
     RowBox[{"Style", "[", 
      RowBox[{"\"\<PITCH-ROLL ROTATION OF AN AIRPLANE IN 3-SPACE\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"Bold", ",", "Blue"}], "}"}]}], "]"}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
    "Print", "[", 
     "\"\<This example is similar to, but more complex than, an example given \
by John Denker, in 'How to Represent Multi-Dimensional Rotations, Including \
Boosts'\>\"", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
    "Print", "[", 
     "\"\<The complexity is not an issue since the computations are done for \
us by this package.\>\"", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
    "Print", "[", 
     "\"\<Don't forget that the rotor angle ( \[Pi]/8) is half of the \
rotation angle (\[Pi]/4)).\>\"", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
    "Print", "[", 
     "\"\<Find the heading that results from a 45\[Degree] pitch followed by \
a 45\[Degree] roll\>\"", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
    "Print", "[", "\"\<The formula for the new heading is:\>\"", "]"}], ";"}],
    "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     StyleBox[
      "\"\<   New heading = (Reverse Rotor r) \[Diamond] Initial heading \
\[Diamond] (Rotor r) computed below.\>\"",
      FontColor->GrayLevel[0]], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", "]"}], ";", 
    RowBox[{
    "Print", "[", "\"\<Of course, Reverse Rotor r means ReverseG[r][.\>\"", 
     "]"}], ";", 
    RowBox[{
    "Print", "[", 
     "\"\<r can be either the pitch rotor, the roll rotor, or the composite \
of the two.\>\"", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"initHeading", "=", 
     SubscriptBox["e", "1"]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", "]"}], ";", 
    RowBox[{
    "Print", "[", 
     "\"\<\!\(\*StyleBox[\"Initial\",FontWeight->\"SemiBold\",FontColor->\
RGBColor[0.42221713588159, 0.18873884184023804`, \
0.00708018616006714]]\)\!\(\*StyleBox[\" \
\",FontWeight->\"SemiBold\",FontColor->RGBColor[0.42221713588159, \
0.18873884184023804`, \
0.00708018616006714]]\)\!\(\*StyleBox[\"heading\",FontWeight->\"SemiBold\",\
FontColor->RGBColor[0.42221713588159, 0.18873884184023804`, \
0.00708018616006714]]\)\!\(\*StyleBox[\":\",FontWeight->\"SemiBold\",\
FontColor->RGBColor[0.42221713588159, 0.18873884184023804`, \
0.00708018616006714]]\)\!\(\*StyleBox[\" \
\",FontWeight->\"SemiBold\",FontColor->RGBColor[0.42221713588159, \
0.18873884184023804`, \
0.00708018616006714]]\)\!\(\*StyleBox[SubscriptBox[\"e\", \"1\"],FontWeight->\
\"SemiBold\",FontColor->RGBColor[0.42221713588159, 0.18873884184023804`, \
0.00708018616006714]]\)\>\"", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<\!\(\*StyleBox[\"Pitch\",FontColor->RGBColor[0., 0., \
0.9981841763942931]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.9981841763942931]]\)\!\(\*StyleBox[\"Rotor\",FontColor->RGBColor[0., 0., \
0.9981841763942931]]\) = \>\"", ",", 
      RowBox[{
       StyleBox["rotorP",
        FontColor->RGBColor[0., 0., 0.9981841763942931]], " ", "=", " ", 
       StyleBox[
        RowBox[{"RotorG", "[", 
         RowBox[{"1", ",", "3", ",", 
          RowBox[{"\[Pi]", "/", "4"}]}], "]"}],
        FontColor->RGBColor[0., 0., 0.]]}]}], "]"}], ";"}], "  ", "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<\!\(\*StyleBox[\"R\",FontColor->RGBColor[0.1450980392156863, \
0.5450980392156862, \
0.]]\)\!\(\*StyleBox[\"everse\",FontColor->RGBColor[0.12904554818036165`, \
0.484946974898909, 0.006927595941100175]]\)\!\(\*StyleBox[\" \
\",FontColor->RGBColor[0.1450980392156863, 0.5450980392156862, \
0.]]\)\!\(\*StyleBox[\"Pitch\",FontColor->RGBColor[0.1450980392156863, \
0.5450980392156862, 0.]]\)\!\(\*StyleBox[\" \
\",FontColor->RGBColor[0.1450980392156863, 0.5450980392156862, \
0.]]\)\!\(\*StyleBox[\"Rotor\",FontColor->RGBColor[0.12904554818036165`, \
0.484946974898909, 0.006927595941100175]]\)\!\(\*StyleBox[\" \
\",FontColor->RGBColor[0.1450980392156863, 0.5450980392156862, 0.]]\)= \>\"", 
      ",", 
      RowBox[{
       StyleBox["rotorPrev",
        FontColor->RGBColor[0.1450980392156863, 0.5450980392156862, 0.]], "=", 
       RowBox[{"ReverseG", "[", "rotorP", "]"}]}]}], "]"}], ";"}], " ", "\n", 
   
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<\!\(\*StyleBox[\"R\",FontColor->RGBColor[0., 0., \
0.9981841763942931]]\)\!\(\*StyleBox[\"oll\",FontColor->RGBColor[0., 0., 1.]]\
\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
1.]]\)\!\(\*StyleBox[\"Rotor\",FontColor->RGBColor[0., 0., 1.]]\) = \>\"", 
      ",", 
      RowBox[{
       StyleBox["rotorR",
        FontColor->RGBColor[0., 0., 0.9981841763942931]], "=", 
       RowBox[{"RotorG", "[", 
        RowBox[{"1", ",", "2", ",", 
         RowBox[{"\[Pi]", "/", "4"}]}], "  ", "]"}]}]}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<\!\(\*StyleBox[\"Reverse\",FontColor->RGBColor[0.1450980392156863, \
0.5450980392156862, 0.]]\)\!\(\*StyleBox[\" \
\",FontColor->RGBColor[0.1450980392156863, 0.5450980392156862, \
0.]]\)\!\(\*StyleBox[\"Roll\",FontColor->RGBColor[0.1450980392156863, \
0.5450980392156862, 0.]]\)\!\(\*StyleBox[\" \
\",FontColor->RGBColor[0.1450980392156863, 0.5450980392156862, \
0.]]\)\!\(\*StyleBox[\"Rotor\",FontColor->RGBColor[0.1450980392156863, \
0.5450980392156862, 0.]]\) = \>\"", ",", 
      RowBox[{
       StyleBox["rotorRrev",
        FontColor->RGBColor[0.1450980392156863, 0.5450980392156862, 0.]], "=", 
       RowBox[{"ReverseG", "[", "rotorR", "]"}]}]}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     StyleBox["pitchHeading",
      FontColor->RGBColor[0.42067597467002366`, 0., 0.005813687342641337]], 
     "=", 
     RowBox[{
     "rotorPrev", "\[Diamond]", "initHeading", "\[Diamond]", "rotorP"}]}], 
    " ", ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<\!\(\*StyleBox[\"New\",FontColor->RGBColor[0.42067597467002366`, \
0., 0.005813687342641337]]\)\!\(\*StyleBox[\" \
\",FontColor->RGBColor[0.42067597467002366`, 0., 0.005813687342641337]]\)\!\(\
\*StyleBox[\"heading\",FontColor->RGBColor[0.42067597467002366`, 0., \
0.005813687342641337]]\)\!\(\*StyleBox[\" \
\",FontColor->RGBColor[0.42067597467002366`, 0., 0.005813687342641337]]\)\!\(\
\*StyleBox[\"after\",FontColor->RGBColor[0.42067597467002366`, 0., \
0.005813687342641337]]\)\!\(\*StyleBox[\" \
\",FontColor->RGBColor[0.42067597467002366`, 0., 0.005813687342641337]]\)\!\(\
\*StyleBox[\"pitch\",FontColor->RGBColor[0.42067597467002366`, 0., \
0.005813687342641337]]\) = \>\"", ",", 
      RowBox[{"Simplify", "[", " ", "pitchHeading", "]"}]}], "]"}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<\!\(\*StyleBox[\"New\",FontColor->RGBColor[0.42067597467002366`, \
0., 0.005813687342641337]]\)\!\(\*StyleBox[\" \
\",FontColor->RGBColor[0.42067597467002366`, 0., 0.005813687342641337]]\)\!\(\
\*StyleBox[\"heading\",FontColor->RGBColor[0.42067597467002366`, 0., \
0.005813687342641337]]\)\!\(\*StyleBox[\" \
\",FontColor->RGBColor[0.42067597467002366`, 0., 0.005813687342641337]]\)\!\(\
\*StyleBox[\"after\",FontColor->RGBColor[0.42067597467002366`, 0., \
0.005813687342641337]]\)\!\(\*StyleBox[\" \
\",FontColor->RGBColor[0.42067597467002366`, 0., 0.005813687342641337]]\)\!\(\
\*StyleBox[\"pitch\",FontColor->RGBColor[0.42067597467002366`, 0., \
0.005813687342641337]]\)\!\(\*StyleBox[\"-\",FontColor->RGBColor[0.\
42067597467002366`, 0., \
0.005813687342641337]]\)\!\(\*StyleBox[\"roll\",FontColor->RGBColor[0.\
42067597467002366`, 0., 0.005813687342641337]]\) = \>\"", ",", 
      RowBox[{"pitchrollHeading", "=", 
       RowBox[{"Simplify", "[", 
        RowBox[{
        "rotorRrev", "\[Diamond]", "pitchHeading", "\[Diamond]", "rotorR"}], 
        "]"}]}]}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
    "Print", "[", 
     "\"\<This heading can also be computed using a single, combined, rotor: \
\>\"", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Composite Rotor = rotorP \[Diamond] rotorR = \>\"", ",", 
      RowBox[{"rotorPR", "=", 
       RowBox[{"rotorP", "\[Diamond]", "rotorR"}]}]}], " ", "]"}], ";"}], " ",
    "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Reverse composite rotor = \>\"", ",", 
      RowBox[{"rotorPRrev", "=", 
       RowBox[{"ReverseG", "[", "rotorPR", "]"}]}]}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{
       "\"\<\!\(\*StyleBox[\"New\",FontColor->RGBColor[0.42067597467002366`, \
0., 0.005813687342641337]]\)\!\(\*StyleBox[\" \
\",FontColor->RGBColor[0.42067597467002366`, 0., 0.005813687342641337]]\)\!\(\
\*StyleBox[\"heading\",FontColor->RGBColor[0.42067597467002366`, 0., \
0.005813687342641337]]\)\!\(\*StyleBox[\" \
\",FontColor->RGBColor[0.42067597467002366`, 0., 0.005813687342641337]]\)\!\(\
\*StyleBox[\"after\",FontColor->RGBColor[0.42067597467002366`, 0., \
0.005813687342641337]]\)\!\(\*StyleBox[\" \
\",FontColor->RGBColor[0.42067597467002366`, 0., 0.005813687342641337]]\)\!\(\
\*StyleBox[\"pitch\",FontColor->RGBColor[0.42067597467002366`, 0., \
0.005813687342641337]]\)\!\(\*StyleBox[\"-\",FontColor->RGBColor[0.\
42067597467002366`, 0., \
0.005813687342641337]]\)\!\(\*StyleBox[\"roll\",FontColor->RGBColor[0.\
42067597467002366`, 0., 0.005813687342641337]]\) = \>\"", ",", "Brown"}], 
       "]"}], ",", 
      RowBox[{"pitchrollHeading2", "=", 
       RowBox[{"Simplify", "[", 
        RowBox[{
        "rotorPRrev", "\[Diamond]", "initHeading", "\[Diamond]", "rotorPR"}], 
        "]"}]}]}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", "]"}], ";", 
    RowBox[{
    "Print", "[", 
     "\"\<We can find the angle between the original and final \
directions!\>\"", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
    "Print", "[", 
     "\"\<Since vectorA \[CenterDot] vectorB = Cos[\[Theta]] for unit \
vectors, we have \>\"", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<     \[Theta] = ArcCos[vectorA \[CenterDot] vectorB] = \
ArcCos[\!\(\*SubscriptBox[\(e\), \(\(1\)\(\\\ \)\)]\)\[CenterDot] \
1/2(\!\(\*SubscriptBox[\(e\), \(1\)]\) + \!\(\*SubscriptBox[\(e\), \(2\)]\) + \
\[Sqrt]2 \!\(\*SubscriptBox[\(e\), \(3\)]\))] = \>\"", ",", 
      RowBox[{"ArcCos", "[", 
       RowBox[{
        SubscriptBox["e", "1"], "\[CenterDot]", "pitchrollHeading"}], "]"}]}],
      "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
    "Print", "[", 
     "\"\<This is a VERY unintuitive result: two 45\[Degree] turns yields a \
60\[Degree] turn\>\"", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", "]"}], ";", 
    RowBox[{"Print", "[", 
     RowBox[{"Style", "[", 
      RowBox[{
      "\"\<The final heading is not the same as for a 45\[Degree] roll \
followed by a 45\[Degree] pitch!! Try it.\>\"", ",", 
       RowBox[{"{", "Red", "}"}]}], "]"}], "]"}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "DEMONSTRATE", " ", "CLIFFORD", " ", "ALGEBRA", " ", "IDENTITIES", "\n", 
      "\t", "v"}], ",", " ", "v1", ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"etc", ".", " ", "are"}], " ", "vectors", "\n", "\t", "B", " ",
        "is", " ", "bivector", "\n", "\t", "clif1", " ", "and", " ", "clif2", 
       " ", "are", " ", "multivectors", " ", "\n", "\n", "Show", " ", "that", 
       "  ", 
       RowBox[{"ReverseG", "[", 
        RowBox[{"clif1", " ", "\[Diamond]", " ", "clif2"}], "]"}]}], " ", "=",
       " ", 
      RowBox[{
       RowBox[{"ReverseG", "[", "clif2", "]"}], " ", "\[Diamond]", " ", 
       RowBox[{"ReverseG", "[", "clif1", "]"}]}]}]}], "  ", "*)"}], "\n", 
   "\n", 
   RowBox[{
    RowBox[{"Print", "[", "]"}], ";", 
    RowBox[{"Print", "[", "]"}], ";", 
    RowBox[{"Print", "[", 
     RowBox[{"Style", "[", 
      RowBox[{"\"\<DEMONSTRATE CLIFFORD ALGEBRA IDENTITIES\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"Bold", ",", "Blue"}], "}"}]}], "]"}], "]"}], ";", 
    RowBox[{"Print", "[", "]"}], ";", 
    RowBox[{"Print", "[", 
     RowBox[{"Style", "[", 
      RowBox[{
      "\"\<IDENTITY: ReverseG[clif1 \[Diamond] clif2] = ReverseG[clif2] \
\[Diamond] ReverseG[clif1]\>\"", ",", "Blue"}], "]"}], "]"}], ";"}], "\n", 
   " ", 
   RowBox[{
    RowBox[{"Print", "[", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"clif1", "=", 
     RowBox[{"ClifG", "[", 
      RowBox[{"a", ",", "3"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"clif2", "=", 
     RowBox[{"ClifG", "[", 
      RowBox[{"b", ",", "5"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"Style", "[", 
      RowBox[{"\"\<clif1 = ClifG[a,3],   clif2=ClifG[b,5]\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"Bold", ",", "Magenta"}], "}"}]}], "]"}], "]"}], ";"}], "\n", 
   
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<ReverseG[clif1 \[Diamond] clif2] = \n ReverseG[clif2] \[Diamond] \
ReverseG[clif1]? \>\"", ",", 
      RowBox[{"Simplify", "[", 
       RowBox[{
        RowBox[{"CollectG", "[", 
         RowBox[{"ReverseG", "[", 
          RowBox[{"F", "\[Diamond]", "G"}], "]"}], "]"}], "===", 
        RowBox[{"CollectG", "[", 
         RowBox[{
          RowBox[{"ReverseG", "[", "G", "]"}], "\[Diamond]", 
          RowBox[{"ReverseG", "[", "F", "]"}]}], "]"}]}], "]"}]}], "]"}], 
    ";"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Show", " ", "that", "  ", 
      RowBox[{"v", " ", "\[Diamond]", " ", "B"}]}], " ", "=", " ", 
     RowBox[{
      RowBox[{"v", " ", "\[CenterDot]", " ", "B"}], " ", "+", " ", 
      RowBox[{"v", " ", "\[Wedge]", " ", "B"}]}]}], "  ", "*)"}], "\n", "\n", 
   
   RowBox[{
    RowBox[{"Print", "[", "]"}], ";", 
    RowBox[{"Print", "[", 
     RowBox[{"Style", "[", 
      RowBox[{
      "\"\<IDENTITY: v \[Diamond] B = v \[CenterDot] B + v \[Wedge] B  for \
vector v and blade B\>\"", ",", "Blue"}], "]"}], "]"}], ";", 
    RowBox[{"Print", "[", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"vec1", "=", 
     RowBox[{"GradedClifG", "[", 
      RowBox[{"a", ",", " ", "1", ",", " ", "3"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"blade2", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"GradedClifG", "[", 
        RowBox[{"b", ",", " ", "1", ",", " ", "1"}], "]"}], ",", 
       RowBox[{"GradedClifG", "[", 
        RowBox[{"b", ",", " ", "1", ",", " ", "2"}], "]"}], ",", 
       RowBox[{"GradedClifG", "[", 
        RowBox[{"b", ",", "2", ",", "3"}], "]"}], ",", 
       RowBox[{"GradedClifG", "[", 
        RowBox[{"b", ",", "2", ",", "4"}], "]"}]}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"i", "=."}], ";", " ", 
    RowBox[{"len", "=", 
     RowBox[{"Length", "[", "blade2", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Table", "[", "\n", "\t", 
       RowBox[{
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Vector = \>\"", ",", 
             RowBox[{"{", 
              RowBox[{"Bold", ",", "Magenta"}], "}"}]}], "]"}], ",", 
           RowBox[{"Style", "[", 
            RowBox[{"vec1", ",", 
             RowBox[{"{", 
              RowBox[{"Bold", ",", "Magenta"}], "}"}]}], "]"}], ",", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<   blade = \>\"", ",", 
             RowBox[{"{", 
              RowBox[{"Bold", ",", "Magenta"}], "}"}]}], "]"}], ",", 
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"blade", "=", 
              RowBox[{"blade2", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"Bold", ",", "Magenta"}], "}"}]}], "]"}]}], "]"}], ";", 
         " ", "\n", "\t", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<                 Vector \[Diamond] blade = \>\"", ",", 
           RowBox[{"t1", "=", 
            RowBox[{"Expand", "[", 
             RowBox[{"vec1", "\[Diamond]", "blade"}], "]"}]}]}], "]"}], ";", 
         "\n", "\t", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<Vector \[CenterDot] blade + Vector \[Wedge] blade = \>\"", ",", 
           RowBox[{"t2", "=", 
            RowBox[{"Expand", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"vec1", "\[CenterDot]", "blade"}], ")"}], "+", 
              RowBox[{"(", 
               RowBox[{"vec1", "\[Wedge]", "blade"}], ")"}]}], "]"}]}]}], 
          "]"}], ";", "\n", "\t", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\< v \[Diamond] B = v \[CenterDot] B + v \[Wedge] B : \>\"", ",", 
           RowBox[{"t1", "\[Equal]", "t2"}]}], "]"}], ";", 
         RowBox[{"Print", "[", "]"}]}], "\n", "\t", ",", "##"}], "]"}], "&"}],
      "@@", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"i", ",", "len"}], "}"}], "}"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Show", " ", "that", "  ", 
        RowBox[{"(", 
         RowBox[{"v1", " ", "\[CenterDot]", " ", "v2"}], ")"}]}], "\[Star]"}],
       " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"v1", " ", "\[Wedge]", " ", "v2"}], "*", "  ", "where"}], " ",
        "\[Star]", " ", 
       RowBox[{"is", " ", "the", " ", "Hodge", " ", "Dual", " ", "\n", "\t", 
        RowBox[{"Note", ":", " ", 
         RowBox[{
         "probably", " ", "holds", " ", "for", " ", "a", " ", "general", " ", 
          "multivector", " ", "and", " ", "a", " ", "vector"}]}]}]}]}], ",", 
     " ", 
     RowBox[{"like", " ", "the", " ", "next", " ", "one"}]}], "  ", "*)"}], 
   "\n", 
   RowBox[{
    RowBox[{"Print", "[", "]"}], ";", 
    RowBox[{"Print", "[", "]"}], ";", 
    RowBox[{"Print", "[", 
     RowBox[{"Style", "[", 
      RowBox[{
      "\"\<IDENTITY: *(v1 \[CenterDot] v2) = v1 \[Wedge] *v2  where \[Star] \
is the Hodge Dual and v1 and v2 are vectors\>\"", ",", "Blue"}], "]"}], "]"}],
     ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"i", "=."}], ";"}], " ", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Table", "[", "\n", "\t", 
       RowBox[{
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Vector1 = \>\"", ",", 
             RowBox[{"{", 
              RowBox[{"Bold", ",", "Magenta"}], "}"}]}], "]"}], ",", 
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"vec1", "=", 
              RowBox[{"GradedClifG", "[", 
               RowBox[{"a", ",", "1", ",", "i"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"Bold", ",", "Magenta"}], "}"}]}], "]"}], ",", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<   Vector2 = \>\"", ",", 
             RowBox[{"{", 
              RowBox[{"Bold", ",", "Magenta"}], "}"}]}], "]"}], ",", 
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"vec2a", "=", 
              RowBox[{"GradedClifG", "[", 
               RowBox[{"b", ",", "1", ",", 
                RowBox[{"i", "+", "2"}]}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"Bold", ",", "Magenta"}], "}"}]}], "]"}]}], "]"}], ";", 
         " ", "\n", "\t", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\< *(Vector1 \[CenterDot] Vector2) = \>\"", ",", 
           RowBox[{"Expand", "[", 
            RowBox[{"HodgeDual3G", "[", 
             RowBox[{
              RowBox[{"vec1", "\[CenterDot]", "vec2a"}], ",", 
              RowBox[{"i", "+", "2"}]}], "]"}], "]"}]}], "]"}], ";", "\n", 
         "\t", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<  Vector1 \[Wedge] *Vector2 = \>\"", ",", 
           RowBox[{"Expand", "[", 
            RowBox[{"vec1", "\[Wedge]", 
             RowBox[{"HodgeDualG", "[", 
              RowBox[{"vec2a", ",", 
               RowBox[{"i", "+", "2"}]}], "]"}]}], "]"}]}], "]"}], ";", "\n", 
         "\t", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\< *(v1 \[CenterDot] v2) = v1 \[Wedge] *v2 : \>\"", ",", 
           RowBox[{
            RowBox[{"HodgeDualG", "[", 
             RowBox[{
              RowBox[{"vec1", "\[CenterDot]", "vec2a"}], ",", 
              RowBox[{"i", "+", "2"}]}], "]"}], "==", 
            RowBox[{"vec1", "\[Wedge]", 
             RowBox[{"HodgeDualG", "[", 
              RowBox[{"vec2a", ",", 
               RowBox[{"i", "+", "2"}]}], "]"}]}]}]}], "]"}], ";", 
         RowBox[{"Print", "[", "]"}]}], "\n", "\t", ",", "##"}], "]"}], "&"}],
      "@@", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"i", ",", "4"}], "}"}], "}"}]}], ";"}], "  ", "\n", "\n", 
   RowBox[{
    RowBox[{"Print", "[", "]"}], ";", 
    RowBox[{"Print", "[", 
     RowBox[{"Style", "[", 
      RowBox[{
      "\"\<IDENTITY: *(clif1 \[Wedge] v2) = clif1 \[CenterDot] *v2  where \
\[Star] is the Hodge Dual, v2 is a vector, and clif1 is a multivector\>\"", 
       ",", "Blue"}], "]"}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"Style", "[", 
      RowBox[{
      "\"\<Exercise: Show that this can fail if v2 is replaced by a \
blade\>\"", ",", "Red"}], "]"}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"i", "=."}], ";"}], " ", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Table", "[", "\n", "\t", 
       RowBox[{
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Clif1 = \>\"", ",", 
             RowBox[{"{", 
              RowBox[{"Bold", ",", "Magenta"}], "}"}]}], "]"}], ",", 
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"clif1", "=", 
              RowBox[{"ClifG", "[", 
               RowBox[{"a", ",", "i"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"Bold", ",", "Magenta"}], "}"}]}], "]"}], ",", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<   Vector2 = \>\"", ",", 
             RowBox[{"{", 
              RowBox[{"Bold", ",", "Magenta"}], "}"}]}], "]"}], ",", 
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"vec2a", "=", 
              RowBox[{"GradedClifG", "[", 
               RowBox[{"b", ",", "1", ",", "i"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"Bold", ",", "Magenta"}], "}"}]}], "]"}]}], "]"}], ";", 
         " ", "\n", "\t", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\< *(Clif1 \[Wedge] Vector2) = \>\"", ",", 
           RowBox[{"t1", "=", 
            RowBox[{"CollectG", "[", 
             RowBox[{"HodgeDualG", "[", 
              RowBox[{
               RowBox[{"clif1", "\[Wedge]", "vec2a"}], ",", 
               RowBox[{"i", "+", "1"}]}], "]"}], "]"}]}]}], "]"}], ";", "\n", 
         "\t", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<  Clif1 \[CenterDot] *Vector2 = \>\"", ",", 
           RowBox[{"t2", "=", 
            RowBox[{"CollectG", "[", 
             RowBox[{"clif1", "\[CenterDot]", 
              RowBox[{"HodgeDualG", "[", 
               RowBox[{"vec2a", ",", 
                RowBox[{"i", "+", "1"}]}], "]"}]}], "]"}]}]}], "]"}], ";", 
         "\n", "\t", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\< *(clif1 \[Wedge] v2) = clif1 \[CenterDot] *v2 : \>\"", ",", 
           RowBox[{"t1", "\[Equal]", "t2"}]}], "]"}], ";", 
         RowBox[{"Print", "[", "]"}]}], "\n", "\t", ",", "##"}], "]"}], "&"}],
      "@@", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"i", ",", "4"}], "}"}], "}"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"Print", "[", "]"}], ";", 
    RowBox[{"Print", "[", 
     RowBox[{"Style", "[", 
      RowBox[{"\"\<DEMONSTRATE ASSOCIATIVITY\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"Bold", ",", "Blue"}], "}"}]}], "]"}], "]"}], ";", 
    RowBox[{"Clear", "[", 
     RowBox[{"a", ",", "b", ",", "c"}], "]"}], ";", 
    RowBox[{"Print", "[", "]"}], ";", 
    RowBox[{"Print", "[", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<A = \>\"", ",", "Blue"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"A", "=", 
         RowBox[{"ClifG", "[", 
          RowBox[{"a", ",", "2"}], "]"}]}], ",", "Blue"}], "]"}]}], "]"}], 
    ";", 
    RowBox[{"Print", "[", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<B = \>\"", ",", "Blue"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"B", "=", 
         RowBox[{"ClifG", "[", 
          RowBox[{"b", ",", "2"}], "]"}]}], ",", "Blue"}], "]"}]}], "]"}], 
    ";", 
    RowBox[{"Print", "[", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<C = \>\"", ",", "Blue"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"CC", "=", 
         RowBox[{"ClifG", "[", 
          RowBox[{"c", ",", "2"}], "]"}]}], ",", "Blue"}], "]"}]}], "]"}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<(A \[Diamond] B) \[Diamond] C = A \[Diamond] (B \[Diamond] C)? \
\>\"", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"A", " ", "\[Wedge]", " ", "B"}], ")"}], "\[Wedge]", "CC"}], 
       "===", " ", 
       RowBox[{"A", " ", "\[Wedge]", " ", 
        RowBox[{"(", 
         RowBox[{"B", " ", "\[Wedge]", " ", "CC"}], ")"}]}]}]}], "]"}], ";"}],
    "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<(A \[Wedge] B) \[Wedge] C = A \[Wedge] (B \[Wedge] C)? \>\"", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"A", " ", "\[Wedge]", " ", "B"}], ")"}], "\[Wedge]", "CC"}], 
       " ", "===", " ", 
       RowBox[{"A", " ", "\[Wedge]", " ", 
        RowBox[{"(", 
         RowBox[{"B", " ", "\[Wedge]", " ", "CC"}], ")"}]}]}]}], "]"}], ";", 
    RowBox[{"Print", "[", "]"}], ";"}], "\n"}]}]], "Input",
 CellChangeTimes->{{3.6902305039439087`*^9, 3.6902305400306673`*^9}, {
   3.690230573913941*^9, 3.690230604101452*^9}, {3.690230661787343*^9, 
   3.690230701569133*^9}, {3.6902307382320232`*^9, 3.690230832012182*^9}, {
   3.6902311199792337`*^9, 3.690231176244658*^9}, {3.6902313050060596`*^9, 
   3.690231334820425*^9}, 3.6902314016154222`*^9, {3.690231432625938*^9, 
   3.69023151138015*^9}, {3.690231666677992*^9, 3.69023167183276*^9}, {
   3.69023170382619*^9, 3.6902317131353292`*^9}, {3.6902320669668417`*^9, 
   3.6902321484707317`*^9}, {3.690233572505608*^9, 3.6902337663293037`*^9}, {
   3.690233799018942*^9, 3.690233881009556*^9}, {3.690233911948003*^9, 
   3.690233916442875*^9}, {3.690233971971483*^9, 3.690234025228529*^9}, {
   3.6902341078544693`*^9, 3.690234227782927*^9}, {3.690234278163576*^9, 
   3.690234510580295*^9}, {3.690234555303368*^9, 3.690234585685411*^9}, {
   3.690234747074108*^9, 3.6902347590589027`*^9}, {3.69023492461007*^9, 
   3.690234927034191*^9}, {3.690235900630959*^9, 3.690235901164254*^9}, {
   3.690237037915822*^9, 3.690237043888113*^9}, 3.690237274316721*^9, {
   3.69023739449053*^9, 3.690237481858781*^9}, {3.690237576023553*^9, 
   3.6902376508270493`*^9}, 3.6902376936269207`*^9, {3.69023785748547*^9, 
   3.69023789300845*^9}, {3.6902379463315077`*^9, 3.69023794702761*^9}, {
   3.6902382445637712`*^9, 3.69023828293186*^9}, {3.690238581817621*^9, 
   3.690238585560545*^9}, {3.6902386172251453`*^9, 3.690238666519649*^9}, {
   3.690238723478746*^9, 3.690238735754575*^9}, 3.690238807858005*^9, {
   3.690238850491749*^9, 3.690238860195747*^9}, 3.690238917925123*^9, {
   3.690381267920676*^9, 3.690381267962426*^9}, {3.69049623898873*^9, 
   3.6904962390775557`*^9}, {3.690496324634922*^9, 3.690496326784329*^9}, {
   3.690497147334836*^9, 3.690497253085958*^9}, {3.690498636937355*^9, 
   3.690498735801364*^9}, {3.690498774355774*^9, 3.6904988984200706`*^9}, {
   3.6904990260366507`*^9, 3.690499032295289*^9}, {3.690580637489756*^9, 
   3.690580649292552*^9}, {3.690580963585047*^9, 3.6905809741416063`*^9}, {
   3.690581006816245*^9, 3.6905810153510103`*^9}, {3.6905810570626707`*^9, 
   3.6905810717757*^9}, {3.6905855269714518`*^9, 3.6905856173580713`*^9}, {
   3.6905857598693523`*^9, 3.690585769119183*^9}, {3.690585919395763*^9, 
   3.690585919796899*^9}, 3.690585967402061*^9, 3.6905874966231537`*^9, {
   3.6908244550489492`*^9, 3.690824501192569*^9}, 3.690825443505843*^9, 
   3.690825768492255*^9, {3.690826047901146*^9, 3.6908260536854563`*^9}, {
   3.690826323346068*^9, 3.69082632409794*^9}, {3.690916695283435*^9, 
   3.6909171266308193`*^9}, {3.690917198770649*^9, 3.690917209037655*^9}, {
   3.69091827276015*^9, 3.690918411014903*^9}, {3.690918447219179*^9, 
   3.690918465765848*^9}, {3.6909185455154047`*^9, 3.6909185508205757`*^9}, 
   3.690918583801421*^9, 3.690918663219534*^9, {3.690918744402576*^9, 
   3.690918759199362*^9}, {3.690918897310911*^9, 3.6909190075509777`*^9}, {
   3.690919062125806*^9, 3.6909190727584867`*^9}, 3.690919210927017*^9, {
   3.690919335053146*^9, 3.6909193739953213`*^9}, 3.6909194677672358`*^9, {
   3.6909195192402782`*^9, 3.690919562272554*^9}, {3.6909195982437563`*^9, 
   3.690919601376821*^9}, {3.6909197192227907`*^9, 3.690919729049364*^9}, 
   3.691094992854127*^9, {3.6910959441332893`*^9, 3.691096134997417*^9}, {
   3.691097998734022*^9, 3.6910980177609262`*^9}, {3.691098082939273*^9, 
   3.691098153549143*^9}, {3.6910981919217243`*^9, 3.691098214915607*^9}, {
   3.6910986799171133`*^9, 3.691098688383472*^9}, {3.691098720050724*^9, 
   3.6910987311584787`*^9}, {3.691098865423127*^9, 3.691098921957635*^9}, {
   3.6910990251712637`*^9, 3.69109912476125*^9}, 3.6910991859510813`*^9, {
   3.691099316914624*^9, 3.691099460211619*^9}, {3.691101902328726*^9, 
   3.691101908064623*^9}, 3.691102193030551*^9, {3.691102245192018*^9, 
   3.691102322093068*^9}, {3.691102909069859*^9, 3.691102915899201*^9}, {
   3.6911032916441936`*^9, 3.6911032924918423`*^9}, {3.691106397443097*^9, 
   3.69110639813904*^9}, {3.691792061008601*^9, 3.6917921236925983`*^9}, 
   3.691792215894582*^9, {3.691792253081572*^9, 3.6917922880149384`*^9}, {
   3.691794456836191*^9, 3.691794458383402*^9}, 3.6917951071925793`*^9, {
   3.6917951524126596`*^9, 3.6917951532904263`*^9}, 3.691795281633654*^9, {
   3.691795475913578*^9, 3.691795485867347*^9}, {3.691795565809564*^9, 
   3.6917955821463614`*^9}, {3.691795673634365*^9, 3.6917957754833813`*^9}, {
   3.691795808751587*^9, 3.6917960740266542`*^9}, {3.6917961199933*^9, 
   3.691796126858616*^9}, 3.691796166336988*^9, {3.691796322819352*^9, 
   3.6917963733836308`*^9}, 3.691796404600459*^9, {3.691796454122301*^9, 
   3.6917965516147614`*^9}, {3.691796678851096*^9, 3.691796740766961*^9}, {
   3.691796855528926*^9, 3.691796892171255*^9}, {3.691796987576591*^9, 
   3.691797032982177*^9}, {3.692453859202342*^9, 3.692453885048246*^9}, {
   3.692453926305232*^9, 3.6924539289186277`*^9}, {3.692457424975395*^9, 
   3.6924574596608477`*^9}, {3.6924575739745913`*^9, 
   3.6924576062487507`*^9}, {3.6924773932584553`*^9, 3.692477410449428*^9}, {
   3.6924785553813887`*^9, 3.6924785620676813`*^9}, {3.692488674682468*^9, 
   3.6924886817773857`*^9}, {3.692488860261879*^9, 3.692488864763163*^9}, {
   3.6924899079935017`*^9, 3.692489914281906*^9}, {3.692490247389106*^9, 
   3.692490289386368*^9}, {3.6924904226064167`*^9, 3.6924904278204613`*^9}, {
   3.6924905926357737`*^9, 3.692490635581942*^9}, {3.692490740669169*^9, 
   3.692490789625798*^9}, {3.692551910949458*^9, 3.69255191261945*^9}, 
   3.692554172799078*^9, {3.6925545115555696`*^9, 3.692554547135942*^9}, {
   3.692554634360718*^9, 3.6925546432314777`*^9}, {3.692563489679717*^9, 
   3.692563513338214*^9}, {3.692568383579458*^9, 3.6925685107731047`*^9}, {
   3.693093612485487*^9, 3.6930936149847383`*^9}, {3.693093672185524*^9, 
   3.6930937006032867`*^9}, {3.693095410489447*^9, 3.6930954609621143`*^9}, {
   3.69317920940917*^9, 3.6931792497083883`*^9}, {3.693179316346052*^9, 
   3.693179326697338*^9}, {3.6931793721220503`*^9, 3.693179428968123*^9}, {
   3.693179613607718*^9, 3.693179614386579*^9}, {3.693336123116955*^9, 
   3.693336133730608*^9}, {3.693336495401746*^9, 3.693336502081484*^9}, {
   3.693337004427883*^9, 3.693337005012443*^9}, {3.6933371289292383`*^9, 
   3.693337159258051*^9}, {3.693341876095378*^9, 3.693341990699004*^9}, {
   3.693342205057317*^9, 3.693342237216135*^9}, {3.693342340722723*^9, 
   3.6933425753840647`*^9}, 3.693346451463406*^9, 3.6933465036374063`*^9, {
   3.693346563866735*^9, 3.693346578623946*^9}, {3.693346656226343*^9, 
   3.693346658283823*^9}, {3.6933469081302013`*^9, 3.6933469157058*^9}, {
   3.693346954936757*^9, 3.693347029107787*^9}, 3.693347093955044*^9, {
   3.6933472204056883`*^9, 3.6933473155911922`*^9}, {3.693347384097149*^9, 
   3.693347398986084*^9}, {3.693347431416932*^9, 3.693347460257492*^9}, 
   3.693347535807674*^9, {3.693347724030569*^9, 3.693347800101053*^9}, {
   3.6933479258256483`*^9, 3.6933479438599*^9}, {3.693351470868264*^9, 
   3.6933515172216988`*^9}, {3.693351568834773*^9, 3.6933516206655397`*^9}, {
   3.693351660083521*^9, 3.693351677394825*^9}, {3.693502046572974*^9, 
   3.693502055827489*^9}, {3.6935021234519157`*^9, 3.693502125780283*^9}, {
   3.695746936786652*^9, 3.69574693738293*^9}, {3.695751035070876*^9, 
   3.6957513186727953`*^9}, 3.6957513560000143`*^9, {3.6957513979416723`*^9, 
   3.695751406086103*^9}, {3.695751532508294*^9, 3.6957515879539633`*^9}, {
   3.6957516312755823`*^9, 3.695751636025893*^9}, 3.6957516773507442`*^9, {
   3.696547515246194*^9, 3.696547594482643*^9}, {3.696547673628201*^9, 
   3.696547690200734*^9}, {3.696550616542742*^9, 3.696550621859372*^9}, {
   3.6965507039485407`*^9, 3.696550707808837*^9}, {3.696614554013548*^9, 
   3.696614556876728*^9}, {3.696614622996808*^9, 3.696614623555922*^9}, 
   3.696614726382316*^9, {3.696618816158359*^9, 3.696618856131186*^9}, {
   3.69661907310998*^9, 3.696619116309656*^9}, {3.696622820677678*^9, 
   3.696622844449499*^9}, {3.696708136623028*^9, 3.696708198665017*^9}, {
   3.696708255421378*^9, 3.696708306722011*^9}, {3.696708340844357*^9, 
   3.696708355868449*^9}, {3.6967084353997*^9, 3.696708511253675*^9}, {
   3.696708562798592*^9, 3.696708584419188*^9}, {3.6967086557770576`*^9, 
   3.6967088172436237`*^9}, {3.6967089907601147`*^9, 3.696708994295673*^9}, {
   3.6967090476268473`*^9, 3.69670913780597*^9}, {3.696709723699916*^9, 
   3.696709818809473*^9}, {3.696709863965488*^9, 3.696709931100678*^9}, {
   3.6967099730745363`*^9, 3.696709979733088*^9}, 3.696710051395068*^9, {
   3.6967103316388702`*^9, 3.696710595260316*^9}, 3.696710626397221*^9, {
   3.696710659054781*^9, 3.696710786977339*^9}, {3.696710825415131*^9, 
   3.6967109265134907`*^9}, 3.6967110106309977`*^9, {3.6967110687565527`*^9, 
   3.696711086424032*^9}, 3.696711168328418*^9, 3.696711358936737*^9, {
   3.6969373485345182`*^9, 3.696937353937133*^9}, {3.696937486819725*^9, 
   3.6969375701242323`*^9}, {3.6969376062340927`*^9, 3.696937608019253*^9}, {
   3.696937690000437*^9, 3.6969378322624807`*^9}, {3.696937896284895*^9, 
   3.696937940991046*^9}, {3.696938097058838*^9, 3.696938129318367*^9}, {
   3.696938271588645*^9, 3.6969384229145184`*^9}, {3.696938492793045*^9, 
   3.69693849597225*^9}, {3.696938568992128*^9, 3.696938575324019*^9}, {
   3.696938735049921*^9, 3.6969387474205723`*^9}, {3.69696818496723*^9, 
   3.696968206455661*^9}, 3.696973267576496*^9, {3.696973298065771*^9, 
   3.696973345848239*^9}, {3.696973389182589*^9, 3.696973403095207*^9}, {
   3.6970235990323553`*^9, 3.6970237225961657`*^9}, {3.697023800454604*^9, 
   3.69702380275359*^9}, {3.697023838245438*^9, 3.69702429165241*^9}, {
   3.697024322196426*^9, 3.697024935190495*^9}, {3.697024965992238*^9, 
   3.697024966909986*^9}, {3.697025075469417*^9, 3.697025128889634*^9}, 
   3.697025174256974*^9, {3.6970258084068823`*^9, 3.697025810273683*^9}, {
   3.697025849287569*^9, 3.697025984118107*^9}, {3.6970260457552967`*^9, 
   3.697026098507015*^9}, {3.697026130530707*^9, 3.697026134001994*^9}, {
   3.697026461293962*^9, 3.697026620766556*^9}, {3.697027578044414*^9, 
   3.6970276859517117`*^9}, {3.69702788476089*^9, 3.69702808919092*^9}, {
   3.697028224931178*^9, 3.697028233895091*^9}, {3.6970282858598967`*^9, 
   3.6970283094414587`*^9}, {3.697028347025104*^9, 3.697028378054515*^9}, {
   3.697028411029879*^9, 3.6970284501035643`*^9}, {3.6970284940190973`*^9, 
   3.6970285172582006`*^9}, {3.697028582521047*^9, 3.697028589875798*^9}, 
   3.697028663441868*^9, {3.697028764258296*^9, 3.6970287659989367`*^9}, {
   3.697028845579576*^9, 3.697028869931734*^9}, {3.697028903612082*^9, 
   3.6970289164352818`*^9}, {3.6970289835491133`*^9, 
   3.6970290069408073`*^9}, {3.697029299177353*^9, 3.697029340975225*^9}, {
   3.697029411986964*^9, 3.697029417800394*^9}, {3.697029492930477*^9, 
   3.6970295468731413`*^9}, {3.697029624322886*^9, 3.697029699740065*^9}, {
   3.697029742450005*^9, 3.69702983341398*^9}, {3.6970298925468903`*^9, 
   3.6970299101313763`*^9}, {3.697029967283092*^9, 3.6970299964011583`*^9}, {
   3.697030050030382*^9, 3.6970300782517843`*^9}, {3.697030108435979*^9, 
   3.697030190963125*^9}, {3.697030244878974*^9, 3.697030300234027*^9}, {
   3.697030393379795*^9, 3.697030452748197*^9}, {3.697030502052202*^9, 
   3.697030531162056*^9}, {3.6970306230732718`*^9, 3.697030624739793*^9}, {
   3.697030662861341*^9, 3.6970306686720667`*^9}, {3.697030709139207*^9, 
   3.697030747329728*^9}, {3.69703082028363*^9, 3.69703085902108*^9}, {
   3.6970309112292337`*^9, 3.697030978943027*^9}, 3.697031257303218*^9, {
   3.6970314266410103`*^9, 3.697031430353466*^9}, {3.697031522052977*^9, 
   3.697031542985979*^9}, 3.7741183334707127`*^9, {3.774545976661874*^9, 
   3.774545978639716*^9}, {3.7745469636670094`*^9, 3.774546982333558*^9}, 
   3.7745470517301483`*^9, {3.774549039754356*^9, 3.774549044191691*^9}, 
   3.7745490989695673`*^9, {3.774549551422071*^9, 3.774549552844469*^9}, 
   3.774549726531975*^9, {3.7745553907458153`*^9, 3.774555409218419*^9}, {
   3.774557712563199*^9, 3.774557736911322*^9}, {3.774557770668449*^9, 
   3.774557775295987*^9}, {3.774557845601459*^9, 3.774557853786796*^9}, {
   3.774559147854549*^9, 3.774559180017683*^9}, {3.774559405408822*^9, 
   3.774559412559601*^9}, {3.774559475208508*^9, 3.7745594788841133`*^9}, {
   3.7745595407659807`*^9, 3.774559544554303*^9}, 3.774559654193125*^9, 
   3.77455969024617*^9, {3.774559725097931*^9, 3.774559779438222*^9}, {
   3.774559997668885*^9, 3.7745600078467817`*^9}, {3.7745601017739573`*^9, 
   3.774560126357984*^9}, {3.774560196060212*^9, 3.774560200808366*^9}, {
   3.774560238102931*^9, 3.774560239859277*^9}, {3.7745604341490383`*^9, 
   3.7745604420643044`*^9}, {3.774560504980817*^9, 3.774560632393062*^9}, {
   3.774560662574087*^9, 3.774560753352353*^9}, {3.774560854838402*^9, 
   3.7745611832807913`*^9}, {3.774561261556555*^9, 3.774561300202602*^9}, 
   3.774561365413006*^9, {3.774561403554449*^9, 3.774561420313539*^9}, {
   3.774561564288587*^9, 3.774561574666712*^9}, {3.774561632028987*^9, 
   3.774561632906349*^9}, {3.7745617027639093`*^9, 3.7745617063121233`*^9}, 
   3.7745617443256807`*^9, {3.774561829900114*^9, 3.7745618922946167`*^9}, {
   3.774562006341428*^9, 3.774562058728052*^9}, {3.774562126322627*^9, 
   3.774562162435273*^9}, {3.7745622254180803`*^9, 3.774562302499858*^9}, {
   3.7745626267490473`*^9, 3.774562682256174*^9}, {3.774562730184042*^9, 
   3.774562783810483*^9}, {3.774562852333766*^9, 3.774562854957367*^9}, {
   3.7746296220981894`*^9, 3.7746299970425997`*^9}, {3.7746300358077707`*^9, 
   3.774630275727187*^9}, {3.7746303107041903`*^9, 3.774630384168971*^9}, {
   3.774630570204606*^9, 3.774630572850664*^9}, {3.774630608768188*^9, 
   3.774630611163884*^9}, {3.77463075844987*^9, 3.7746307610531*^9}, {
   3.774630826509774*^9, 3.774630906685897*^9}, {3.774631005926692*^9, 
   3.774631011193119*^9}, {3.774631052503744*^9, 3.774631058640655*^9}, {
   3.774631100374114*^9, 3.774631137280726*^9}, {3.7746311847871437`*^9, 
   3.774631198341928*^9}, {3.774631309852508*^9, 3.774631362079277*^9}, {
   3.7746315710722437`*^9, 3.7746316380406523`*^9}, {3.774631668543483*^9, 
   3.7746317164708014`*^9}, {3.774631833931926*^9, 3.7746318428171253`*^9}, {
   3.7746320362847567`*^9, 3.77463208351335*^9}, {3.77463214473422*^9, 
   3.774632165613824*^9}, {3.774632229394401*^9, 3.774632230379088*^9}, {
   3.774632448054105*^9, 3.774632480082552*^9}, {3.774632764495716*^9, 
   3.7746327666088037`*^9}, {3.77463284947005*^9, 3.774632864360084*^9}, {
   3.774632962406377*^9, 3.774632965251697*^9}, {3.7746331208241777`*^9, 
   3.774633122842984*^9}, {3.774633376186489*^9, 3.774633377095214*^9}, {
   3.7746334807132273`*^9, 3.774633481102902*^9}, {3.774633521825964*^9, 
   3.7746335299890327`*^9}, 3.774633873508857*^9, {3.77463404517846*^9, 
   3.774634064086385*^9}, 3.774634141847005*^9, {3.774634230430336*^9, 
   3.774634256675856*^9}, {3.774642843350037*^9, 3.774642900276347*^9}, {
   3.7746429306796227`*^9, 3.7746430227343063`*^9}, {3.774643059404508*^9, 
   3.7746431833899317`*^9}, {3.77464322713546*^9, 3.774643278828064*^9}, {
   3.7746433100554934`*^9, 3.774643363256711*^9}, {3.7746434604974422`*^9, 
   3.7746436090223627`*^9}, {3.774643674406067*^9, 3.774643693935081*^9}, {
   3.774643756135244*^9, 3.7746437973805103`*^9}, {3.7746444382098417`*^9, 
   3.7746444778257017`*^9}, {3.774644521034919*^9, 3.7746445268526*^9}, {
   3.7746446401373053`*^9, 3.77464470258786*^9}, {3.774644796556684*^9, 
   3.7746448356363363`*^9}, {3.774644876104463*^9, 3.77464491151571*^9}, {
   3.774644958804578*^9, 3.7746449617596416`*^9}, {3.774645085128292*^9, 
   3.7746451597615633`*^9}, {3.77464519251024*^9, 3.7746452004106092`*^9}, {
   3.774645301389642*^9, 3.774645317680751*^9}, {3.77464540924235*^9, 
   3.774645426935985*^9}, {3.774998298249488*^9, 3.7749983054048347`*^9}, {
   3.774998542533306*^9, 3.7749986137468243`*^9}, {3.774998711158255*^9, 
   3.7749987896901712`*^9}, {3.77499886058887*^9, 3.774999072759948*^9}, {
   3.774999203402791*^9, 3.7749992116863127`*^9}, {3.775075962494318*^9, 
   3.775075967856625*^9}, {3.775135113037952*^9, 3.775135128281518*^9}, {
   3.7751352257489233`*^9, 3.775135280102139*^9}, {3.7751353262778263`*^9, 
   3.775135329375781*^9}, {3.775136130685144*^9, 3.775136237763151*^9}, {
   3.7751364306568832`*^9, 3.7751364381961308`*^9}, {3.775136479254634*^9, 
   3.7751364800180407`*^9}, {3.7751365128286247`*^9, 
   3.7751365255568666`*^9}, {3.77513660740578*^9, 3.775136608956356*^9}, {
   3.775140206411838*^9, 3.775140208081513*^9}, {3.775140323108717*^9, 
   3.775140324683926*^9}, {3.775140585401548*^9, 3.775140605683786*^9}, {
   3.7751417020539017`*^9, 3.775141706132399*^9}, {3.77514205657125*^9, 
   3.775142085118607*^9}, {3.775142129513*^9, 3.775142207531814*^9}, {
   3.775142239727936*^9, 3.775142270999384*^9}, {3.7753250071728563`*^9, 
   3.7753250101083107`*^9}, {3.775325092721159*^9, 3.7753251084142227`*^9}, 
   3.77532623545685*^9, {3.77534177074712*^9, 3.775341779312504*^9}, {
   3.77534184392045*^9, 3.775341879941333*^9}, {3.775342234108664*^9, 
   3.775342236750996*^9}, 3.775343758791353*^9, {3.77534394607329*^9, 
   3.775343947177567*^9}, 3.7753447507432213`*^9, {3.7753447832484713`*^9, 
   3.7753447876623287`*^9}, {3.775344835255363*^9, 3.775344960145753*^9}, {
   3.775344997002846*^9, 3.7753451239701767`*^9}, {3.775345195912798*^9, 
   3.775345219184856*^9}, {3.7753452640627623`*^9, 3.775345274436194*^9}, {
   3.775345369359552*^9, 3.775345373323704*^9}, 3.77534543626433*^9, 
   3.775345474137147*^9, {3.7753455373831463`*^9, 3.775345547971449*^9}, {
   3.775345625172958*^9, 3.775345631849985*^9}, 3.775345705013751*^9, 
   3.775345750913821*^9, 3.775345807818159*^9, {3.77534586462683*^9, 
   3.775345864800229*^9}, {3.77548271086623*^9, 3.775482755617255*^9}, {
   3.775486935881551*^9, 3.775487165990017*^9}, {3.77548730490193*^9, 
   3.775487358301086*^9}, {3.775487653731649*^9, 3.7754876770317717`*^9}, {
   3.77548799063694*^9, 3.775487996356576*^9}, {3.775488034188875*^9, 
   3.77548836640835*^9}, {3.7754884439548264`*^9, 3.77548846084477*^9}, {
   3.775493475471634*^9, 3.775493483617365*^9}, {3.775493899655455*^9, 
   3.775493901995521*^9}, {3.775493946172858*^9, 3.775493999524104*^9}, {
   3.775494062409531*^9, 3.775494073130163*^9}, 3.775494141870207*^9, {
   3.7754942007160463`*^9, 3.775494219805113*^9}, {3.775494260303009*^9, 
   3.7754942882113323`*^9}, {3.775495222343461*^9, 3.7754952251285353`*^9}, 
   3.7754955469986258`*^9, {3.7754964419647417`*^9, 3.775496454258913*^9}, {
   3.7755087702704067`*^9, 3.775508824037692*^9}, {3.7755089180598783`*^9, 
   3.775508918785204*^9}, {3.775512422368244*^9, 3.775512461351626*^9}, {
   3.77551259089809*^9, 3.775512720850635*^9}, {3.775512819959285*^9, 
   3.775512854464076*^9}, {3.775513688668722*^9, 3.775513691198782*^9}, {
   3.775513971577695*^9, 3.7755139864182243`*^9}, {3.7755140465903673`*^9, 
   3.775514049869706*^9}, {3.7755141561655273`*^9, 3.775514188147883*^9}, 
   3.7755153769988413`*^9, {3.775515489916555*^9, 3.775515498482983*^9}, {
   3.7755591029186373`*^9, 3.775559121481989*^9}, {3.7755605147642403`*^9, 
   3.77556051581616*^9}, 3.7755607331865673`*^9, {3.775560770500054*^9, 
   3.775560912841159*^9}, {3.775560947394569*^9, 3.77556096810143*^9}, {
   3.775561017817391*^9, 3.775561028639194*^9}, {3.7755611899763517`*^9, 
   3.775561252416581*^9}, {3.775561295910771*^9, 3.775561392760276*^9}, {
   3.775561520154808*^9, 3.7755615408313503`*^9}, {3.77556162456808*^9, 
   3.7755616924394712`*^9}, {3.775561800698016*^9, 3.775561819457728*^9}, {
   3.775561855472268*^9, 3.775562123462219*^9}, {3.775562157588943*^9, 
   3.77556221690239*^9}, {3.775562285032036*^9, 3.775562370274719*^9}, {
   3.7755624079091578`*^9, 3.7755624275624657`*^9}, 3.775562471952557*^9, {
   3.775564246867133*^9, 3.7755644678319883`*^9}, {3.7755645121919928`*^9, 
   3.7755645256866703`*^9}, {3.7755645827116737`*^9, 
   3.7755647216075907`*^9}, {3.77556476551604*^9, 3.7755647677668*^9}, {
   3.7755648115827303`*^9, 3.775564864387343*^9}, {3.775564935707862*^9, 
   3.775564992358863*^9}, {3.775565027600419*^9, 3.775565131166478*^9}, {
   3.7755651673010178`*^9, 3.775565178302109*^9}, {3.775565213353362*^9, 
   3.775565241381751*^9}, {3.775565620012641*^9, 3.775565717718981*^9}, {
   3.775565839679579*^9, 3.7755658606792393`*^9}, {3.7755658924676456`*^9, 
   3.775565995106642*^9}, {3.775573340165348*^9, 3.775573341137577*^9}, {
   3.775579676364779*^9, 3.775579681145772*^9}, {3.775579840814039*^9, 
   3.775579962202785*^9}, {3.775580008949308*^9, 3.775580147908924*^9}, {
   3.775580179988867*^9, 3.77558038957347*^9}, {3.775580484065584*^9, 
   3.775580513004971*^9}, {3.775580563436858*^9, 3.775580619457862*^9}, {
   3.775580674640317*^9, 3.775580676593132*^9}, {3.7756584182539473`*^9, 
   3.775658428403966*^9}, {3.775658939746429*^9, 3.775658986273046*^9}, {
   3.77565902101503*^9, 3.775659021313355*^9}, {3.775659099252674*^9, 
   3.775659123382393*^9}, {3.7756591660429497`*^9, 3.7756594826401052`*^9}, {
   3.775659554825768*^9, 3.775659658490498*^9}, {3.775659911586748*^9, 
   3.775659998659203*^9}, {3.775660051136993*^9, 3.775660112604722*^9}, {
   3.77566014731151*^9, 3.775660156655776*^9}, {3.775660209564711*^9, 
   3.7756603486524353`*^9}, {3.7756604852766943`*^9, 3.775660521603937*^9}, {
   3.775660561456321*^9, 3.775660650627819*^9}, {3.775660720374405*^9, 
   3.775660914392325*^9}, {3.77566094759383*^9, 3.7756609503999367`*^9}, 
   3.7756610394579687`*^9, {3.775661192398367*^9, 3.775661228629911*^9}, {
   3.775661794593484*^9, 3.775661796300849*^9}, {3.7756618351722317`*^9, 
   3.775661846102255*^9}, {3.775661911656608*^9, 3.775661913310402*^9}, {
   3.7756619942351713`*^9, 3.775662003310299*^9}, {3.7756622004731207`*^9, 
   3.775662268022422*^9}, {3.775662340397798*^9, 3.775662576023168*^9}, {
   3.775662607015913*^9, 3.775662710978161*^9}, {3.775669762870883*^9, 
   3.7756699484081297`*^9}, {3.7756699926870623`*^9, 3.775669999291934*^9}, {
   3.775670079166346*^9, 3.775670122623746*^9}, {3.775670154641913*^9, 
   3.7756702039996*^9}, {3.775670241099069*^9, 3.775670245930367*^9}, {
   3.775670287413484*^9, 3.77567031101097*^9}, {3.775670374254767*^9, 
   3.77567037862459*^9}, {3.77567040884866*^9, 3.775670484598366*^9}, {
   3.775670516429226*^9, 3.7756705499812202`*^9}, {3.7756706245257607`*^9, 
   3.775670627429003*^9}, {3.7756707041094103`*^9, 3.7756707207161617`*^9}, {
   3.775670753589458*^9, 3.7756707587565107`*^9}, {3.775670969161907*^9, 
   3.775671111976606*^9}, {3.775671170785945*^9, 3.775671193393958*^9}, 
   3.775671343141658*^9, {3.775671514974959*^9, 3.77567154065343*^9}, {
   3.7756716145992947`*^9, 3.775671617017098*^9}, {3.7756717396851063`*^9, 
   3.775671763423469*^9}, {3.7756719518067093`*^9, 3.775671962649522*^9}, {
   3.775672120207712*^9, 3.7756721953277397`*^9}, {3.775672278557004*^9, 
   3.775672321283236*^9}, {3.77567236956905*^9, 3.775672423158959*^9}, {
   3.775767971597501*^9, 3.77576797205646*^9}, {3.775907666048794*^9, 
   3.775907711954561*^9}, {3.775907743342761*^9, 3.775907895828869*^9}, {
   3.775907928319839*^9, 3.775907933703823*^9}, {3.775907968234948*^9, 
   3.775908109401593*^9}, {3.7759092526739492`*^9, 3.775909556467993*^9}, {
   3.77590959114028*^9, 3.775909596040017*^9}, {3.7759096278540773`*^9, 
   3.7759097850908527`*^9}, {3.775909830682819*^9, 3.775909846179555*^9}, {
   3.7759098766980247`*^9, 3.775909967066825*^9}, {3.775910004394348*^9, 
   3.77591002245817*^9}, {3.775910054883709*^9, 3.775910158910625*^9}, {
   3.775910213817548*^9, 3.7759102398706837`*^9}, {3.7759103062576647`*^9, 
   3.775910357330579*^9}, {3.775910410001877*^9, 3.775910414232889*^9}, {
   3.7759104570574217`*^9, 3.775910481303891*^9}, {3.775910517761013*^9, 
   3.7759105248588657`*^9}, {3.775910645956471*^9, 3.775910663823217*^9}, {
   3.7759107212473183`*^9, 3.775910739458357*^9}, 3.775910809115204*^9, 
   3.775910841274448*^9, {3.775911020551651*^9, 3.775911089893303*^9}, {
   3.775911538011409*^9, 3.775911541248356*^9}, {3.775911575072624*^9, 
   3.7759115920639677`*^9}, 3.77591164528148*^9, {3.7759116777844048`*^9, 
   3.775911744603606*^9}, {3.7759117799713173`*^9, 3.775911801319148*^9}, {
   3.7759118344546556`*^9, 3.7759118479395227`*^9}, {3.7759118827844954`*^9, 
   3.7759120275793056`*^9}, {3.77591216536226*^9, 3.775912237005189*^9}, {
   3.77591226874035*^9, 3.775912418252907*^9}, {3.7759124734703836`*^9, 
   3.775912499014839*^9}, {3.77591254565696*^9, 3.775912596739389*^9}, {
   3.7759126568610353`*^9, 3.775912660377317*^9}, {3.775912705130229*^9, 
   3.7759127079747667`*^9}, {3.775912852996747*^9, 3.775912875206311*^9}, {
   3.775912932541078*^9, 3.775912934864649*^9}, {3.775912967645452*^9, 
   3.775912968465042*^9}, {3.775913017381159*^9, 3.775913041829688*^9}, {
   3.775913083620221*^9, 3.7759131338160543`*^9}, {3.775913170603791*^9, 
   3.775913418742214*^9}, {3.7759134567258053`*^9, 3.775913501378352*^9}, {
   3.775913562123983*^9, 3.775913563450192*^9}, {3.7759136561193953`*^9, 
   3.77591368458071*^9}, {3.775913745879113*^9, 3.775913747898211*^9}, {
   3.775913785179433*^9, 3.775913792353118*^9}, 3.77591392004051*^9, {
   3.775913952567708*^9, 3.7759140168123007`*^9}, {3.775914071811441*^9, 
   3.7759140819346046`*^9}, {3.775914151183497*^9, 3.775914164591558*^9}, {
   3.775914232570665*^9, 3.775914274349805*^9}, 3.7759143531989117`*^9, {
   3.775918338667882*^9, 3.775918374382889*^9}, {3.775918413788829*^9, 
   3.775918432149097*^9}, {3.775918464444848*^9, 3.775918502595373*^9}, {
   3.7759185352187977`*^9, 3.775918573489242*^9}, {3.775918606763392*^9, 
   3.775918628412961*^9}, 3.7759186613819017`*^9, {3.775918694968511*^9, 
   3.775918724641007*^9}, {3.775918886226863*^9, 3.775918914375235*^9}, {
   3.775919049848185*^9, 3.775919051034296*^9}, {3.775919101210567*^9, 
   3.7759191040452414`*^9}, {3.775919226955583*^9, 3.7759193213184967`*^9}, {
   3.775919390444418*^9, 3.7759193927886877`*^9}, {3.775919450854361*^9, 
   3.775919490123315*^9}, {3.7759199150676107`*^9, 3.77591992475524*^9}, {
   3.775919958955372*^9, 3.7759199771727057`*^9}, {3.775920030787611*^9, 
   3.775920045195312*^9}, {3.775920084728744*^9, 3.775920101127934*^9}, {
   3.775920275351685*^9, 3.775920317109872*^9}, {3.775920350557577*^9, 
   3.775920363773452*^9}, 3.775920393818863*^9, {3.775920593669647*^9, 
   3.7759205984194307`*^9}, {3.7759206287036247`*^9, 3.775920722718314*^9}, {
   3.775920782095294*^9, 3.775920787661252*^9}, {3.775920853120123*^9, 
   3.775920859336725*^9}, {3.775920903654623*^9, 3.775920923650916*^9}, {
   3.775921111507021*^9, 3.775921219261235*^9}, {3.775921274437069*^9, 
   3.7759213508627977`*^9}, {3.775925874369114*^9, 3.775925968122781*^9}, {
   3.775926019680676*^9, 3.775926064346324*^9}, {3.775926095438613*^9, 
   3.775926130804305*^9}, {3.775938554725786*^9, 3.7759385566946497`*^9}, {
   3.775938735292042*^9, 3.775938737554385*^9}, {3.775938807211217*^9, 
   3.775938807948102*^9}, {3.7759451534919863`*^9, 3.7759451556559*^9}, {
   3.775945291296033*^9, 3.7759453058506727`*^9}, {3.775945970933413*^9, 
   3.7759459775365*^9}, {3.7759989812924767`*^9, 3.775999111371883*^9}, {
   3.7759991552589607`*^9, 3.775999269041294*^9}, {3.775999301347198*^9, 
   3.7759994904451036`*^9}, {3.7759995204961357`*^9, 3.775999554304154*^9}, {
   3.7759996173757143`*^9, 3.7759996211135883`*^9}, {3.77599969044061*^9, 
   3.775999716314392*^9}, {3.775999757728551*^9, 3.775999794648662*^9}, {
   3.7759999985867157`*^9, 3.776000045571814*^9}, {3.776000167057281*^9, 
   3.776000264482917*^9}, {3.776023992588244*^9, 3.776024022826775*^9}, 
   3.776024074587412*^9, {3.7760241561235533`*^9, 3.776024226074544*^9}, {
   3.77602432217305*^9, 3.776024392658454*^9}, {3.776082557120528*^9, 
   3.776082636160738*^9}, {3.776082682014181*^9, 3.776082828609305*^9}, {
   3.776082863800668*^9, 3.776082866013694*^9}, {3.776083080114374*^9, 
   3.776083122020409*^9}, {3.776083284851265*^9, 3.776083320603198*^9}, {
   3.77608336986614*^9, 3.776083390788299*^9}, {3.776083425269885*^9, 
   3.776083425594681*^9}, {3.776083484048665*^9, 3.7760835491477947`*^9}, {
   3.77608361842675*^9, 3.776083698215036*^9}, {3.7760838692215*^9, 
   3.776083901855543*^9}, {3.776083966285282*^9, 3.7760842176889668`*^9}, {
   3.7760842507616177`*^9, 3.776084406212192*^9}, {3.776084438991588*^9, 
   3.776084497304637*^9}, 3.776084622786022*^9, {3.776084653525382*^9, 
   3.776084662350439*^9}, {3.7760847089017344`*^9, 3.7760847094534492`*^9}, {
   3.7760847483195143`*^9, 3.7760847517958517`*^9}, 3.776084806564179*^9, {
   3.7760849176137323`*^9, 3.776085005501595*^9}, 3.776085149005598*^9, {
   3.776085198629987*^9, 3.7760852582068663`*^9}, {3.7760852909043293`*^9, 
   3.776085291820519*^9}, {3.7760854593841467`*^9, 3.7760854611602907`*^9}, {
   3.7760855260208387`*^9, 3.776085547741358*^9}, {3.7760858008430643`*^9, 
   3.7760858031768312`*^9}, {3.77608585987148*^9, 3.776085880208305*^9}, {
   3.7760859306515207`*^9, 3.776085932631336*^9}, 3.776086425865456*^9, {
   3.776086647644936*^9, 3.7760866655408907`*^9}, {3.776097530979032*^9, 
   3.7760975385587482`*^9}, {3.7760977719376698`*^9, 3.776097774234103*^9}, 
   3.7760979028634157`*^9, {3.7760979414125566`*^9, 3.776098094119376*^9}, {
   3.776098146303281*^9, 3.7760981880924797`*^9}, {3.776098219846233*^9, 
   3.776098316543531*^9}, {3.776098361691766*^9, 3.776098363062272*^9}, 
   3.776098404857984*^9, {3.7760985194456043`*^9, 3.776098525660365*^9}, {
   3.776098605702162*^9, 3.776098727648211*^9}, {3.776098766092882*^9, 
   3.776098840068472*^9}, {3.776098917785174*^9, 3.77609908074656*^9}, {
   3.77609917003163*^9, 3.776099316026403*^9}, {3.77609934866646*^9, 
   3.776099354593972*^9}, {3.776099427154729*^9, 3.776099428681498*^9}, {
   3.7760994982477493`*^9, 3.776099559475268*^9}, {3.776099592459157*^9, 
   3.776100051198801*^9}, {3.776100082353549*^9, 3.776100443088319*^9}, {
   3.7761005188085318`*^9, 3.776100536772873*^9}, {3.77610058254*^9, 
   3.77610075815097*^9}, {3.776100834974532*^9, 3.776100847648549*^9}, 
   3.776101069453765*^9, {3.77610115401904*^9, 3.776101180250422*^9}, {
   3.7761013691461678`*^9, 3.776101375207274*^9}, {3.77610143166896*^9, 
   3.776101433338937*^9}, {3.776101616292911*^9, 3.776101621312531*^9}, 
   3.7761016714959517`*^9, {3.776101713603973*^9, 3.776101714989039*^9}, {
   3.776101765048347*^9, 3.776101795403213*^9}, {3.776101913420126*^9, 
   3.776101940693392*^9}, {3.776102029195314*^9, 3.77610203113511*^9}, {
   3.7761021071823893`*^9, 3.7761021100918016`*^9}, {3.776102198019703*^9, 
   3.7761022232696257`*^9}, {3.776102367751815*^9, 3.776102375391664*^9}, {
   3.776102421506586*^9, 3.776102425702962*^9}, {3.776102492755735*^9, 
   3.776102512505666*^9}, {3.776102580679783*^9, 3.7761025954544992`*^9}, {
   3.776102672727417*^9, 3.776102724858815*^9}, {3.7761027599779797`*^9, 
   3.776102767968021*^9}, {3.776102884381754*^9, 3.7761028886955853`*^9}, {
   3.7761030188450727`*^9, 3.77610304856711*^9}, {3.776108334050981*^9, 
   3.776108355165522*^9}, 3.776108393273427*^9, {3.776109023485807*^9, 
   3.776109049716734*^9}, {3.7761090893111763`*^9, 3.776109171630417*^9}, {
   3.776109211837109*^9, 3.776109462429978*^9}, {3.776109504046091*^9, 
   3.776109561222224*^9}, {3.776109600711804*^9, 3.776109886619267*^9}, {
   3.776109977335585*^9, 3.7761100205137787`*^9}, {3.7761100978383837`*^9, 
   3.776110099949135*^9}, {3.776114107206923*^9, 3.776114108518862*^9}, {
   3.7761143151470823`*^9, 3.776114491693481*^9}, {3.77611453809102*^9, 
   3.7761145458635683`*^9}, {3.776114636936871*^9, 3.776114676575767*^9}, {
   3.776114805039072*^9, 3.776114818615231*^9}, 3.7761148767993*^9, {
   3.776114992886456*^9, 3.7761149945415297`*^9}, {3.7761151064272833`*^9, 
   3.77611511000143*^9}, {3.776115213577498*^9, 3.776115224913094*^9}, {
   3.7761823581437807`*^9, 3.77618253334591*^9}, {3.776182590338163*^9, 
   3.776182592215555*^9}, {3.776182654292061*^9, 3.776182730047639*^9}, {
   3.776182763992095*^9, 3.776182883095304*^9}, {3.776182951289603*^9, 
   3.77618295227044*^9}, {3.776183020701262*^9, 3.776183033721649*^9}, {
   3.7761831389410677`*^9, 3.7761831856766653`*^9}, {3.7761832556460238`*^9, 
   3.776183293620018*^9}, {3.776183422833757*^9, 3.77618343106282*^9}, {
   3.776183565245268*^9, 3.7761835659584837`*^9}, {3.776183672876781*^9, 
   3.7761837473692627`*^9}, {3.776183789779063*^9, 3.776183794093515*^9}, 
   3.7761838357647142`*^9, {3.77618388187383*^9, 3.776184442565867*^9}, {
   3.776184476637226*^9, 3.776184853392158*^9}, {3.7761849273797398`*^9, 
   3.7761849277916193`*^9}, {3.7761850975666237`*^9, 3.776185135698249*^9}, {
   3.7761851999595833`*^9, 3.776185238879071*^9}, {3.7761853155284452`*^9, 
   3.776185332685808*^9}, {3.776185405109556*^9, 3.7761854303812037`*^9}, {
   3.776185678298666*^9, 3.7761856900401983`*^9}, {3.776185799906804*^9, 
   3.7761858132830143`*^9}, {3.777907703653554*^9, 3.777907770385023*^9}, {
   3.7779090021393557`*^9, 3.777909017583941*^9}, {3.77791053839747*^9, 
   3.777910541644669*^9}, {3.777910834296981*^9, 3.7779108581999273`*^9}, {
   3.777912463433297*^9, 3.777912488321053*^9}, {3.777912870152541*^9, 
   3.7779128829630833`*^9}, {3.777912965111216*^9, 3.7779129666173887`*^9}, 
   3.777913080175395*^9, 3.777913391543076*^9, {3.777993024294848*^9, 
   3.7779930250985518`*^9}, {3.7779931323869762`*^9, 3.777993134775597*^9}, {
   3.777993170638467*^9, 3.7779931711113577`*^9}, {3.7779938529505777`*^9, 
   3.777993854302112*^9}, {3.778326636479617*^9, 3.778326796465597*^9}, {
   3.778326846905156*^9, 3.778326917409602*^9}, {3.7783269783339977`*^9, 
   3.778326982834914*^9}, {3.778327709588913*^9, 3.778327710099205*^9}, {
   3.7783277612077637`*^9, 3.778327821498007*^9}, 3.778327874886858*^9, 
   3.778327913055265*^9, {3.778328043506167*^9, 3.778328115266618*^9}, {
   3.778328186516398*^9, 3.778328195992536*^9}, {3.77832825092628*^9, 
   3.778328262923628*^9}, {3.778328317479813*^9, 3.778328325577921*^9}, {
   3.778328362865819*^9, 3.7783283884733953`*^9}, {3.7783285138874073`*^9, 
   3.778328604203*^9}, {3.7783286370699368`*^9, 3.778328923999969*^9}, {
   3.778329735021906*^9, 3.778329740640441*^9}, {3.7783658032979527`*^9, 
   3.778365814532564*^9}, {3.778365847397072*^9, 3.778365898263441*^9}, {
   3.7783659766905823`*^9, 3.778365992279085*^9}, {3.778366087997077*^9, 
   3.778366215251046*^9}, 3.778366285576532*^9, {3.7784362268223248`*^9, 
   3.778436230369261*^9}, {3.77843626504504*^9, 3.778436609316784*^9}, {
   3.778443607467319*^9, 3.778443689868393*^9}, {3.7784437478042183`*^9, 
   3.7784438739416513`*^9}, {3.778443923075554*^9, 3.778443965419944*^9}, {
   3.778444012178587*^9, 3.7784440650643578`*^9}, {3.778444101035873*^9, 
   3.7784441240080338`*^9}, {3.778444176143753*^9, 3.778444288394403*^9}, {
   3.778444328548168*^9, 3.778444434652122*^9}, 3.778444583034676*^9, {
   3.778444636276537*^9, 3.778444636664171*^9}, {3.77844499767871*^9, 
   3.778444998611619*^9}, {3.778445054690144*^9, 3.778445171401614*^9}, {
   3.7784452442235327`*^9, 3.7784452594139767`*^9}, {3.778445534012178*^9, 
   3.7784455426321917`*^9}, {3.778445649021215*^9, 3.778445702234749*^9}, {
   3.778445743742395*^9, 3.7784457489227257`*^9}, {3.778445942717968*^9, 
   3.778445955121512*^9}, {3.778446080567216*^9, 3.778446128701374*^9}, {
   3.7784461900400887`*^9, 3.778446217923806*^9}, 3.778446314113162*^9, {
   3.7784463548086357`*^9, 3.778446365897291*^9}, {3.7784466478722887`*^9, 
   3.778446762560266*^9}, {3.778446890822979*^9, 3.778446894796298*^9}, {
   3.778447188923223*^9, 3.7784472081032*^9}, {3.778447249954659*^9, 
   3.778447291523809*^9}, {3.7784477372307587`*^9, 3.77844788204907*^9}, {
   3.778447959323885*^9, 3.7784479843015833`*^9}, {3.7784480416631002`*^9, 
   3.778448076701344*^9}, {3.7784481784099293`*^9, 3.7784482965246563`*^9}, {
   3.7784483367676563`*^9, 3.778448393545416*^9}, 3.7784485030374813`*^9, {
   3.778448718248899*^9, 3.778448747326378*^9}, {3.779726842558098*^9, 
   3.7797268644989853`*^9}, {3.779726915687459*^9, 3.7797269629514923`*^9}, {
   3.779727080284176*^9, 3.779727081223969*^9}, {3.779727246862591*^9, 
   3.779727301245352*^9}, {3.779727389805689*^9, 3.7797276012768373`*^9}, {
   3.7797277495419064`*^9, 3.779727750043006*^9}, {3.779727798783099*^9, 
   3.7797278026918287`*^9}, {3.779727842129798*^9, 3.779727871834988*^9}, {
   3.7797279424947844`*^9, 3.779727945282895*^9}, {3.779728039929019*^9, 
   3.779728041746664*^9}, {3.779728100267378*^9, 3.779728102962801*^9}, {
   3.779732715677898*^9, 3.7797327172093277`*^9}, {3.7797371635237017`*^9, 
   3.7797371746232653`*^9}, {3.779742165685246*^9, 3.779742187140411*^9}, {
   3.779742279949788*^9, 3.77974230959709*^9}, 3.779743122513793*^9, {
   3.779743155278824*^9, 3.779743186720757*^9}, {3.779745556786549*^9, 
   3.7797455707290583`*^9}, 3.779745637136487*^9, {3.779745856472291*^9, 
   3.7797459079537067`*^9}, {3.7797459695525637`*^9, 3.77974600566886*^9}, {
   3.7797460445478287`*^9, 3.779746060916298*^9}, 3.779751359702379*^9, {
   3.779810495172677*^9, 3.779810495464081*^9}, {3.779810585148625*^9, 
   3.779810585440929*^9}, 3.7798106891314993`*^9, {3.779810721855713*^9, 
   3.7798107495175457`*^9}, {3.779816973621513*^9, 3.779816988032008*^9}, {
   3.779916647600684*^9, 3.7799167654691353`*^9}, {3.77991680393854*^9, 
   3.779916909199732*^9}, {3.779916957673723*^9, 3.7799169754892683`*^9}, {
   3.7799171596401157`*^9, 3.779917272462583*^9}, {3.7799173036443653`*^9, 
   3.7799174504285*^9}, {3.779917588954547*^9, 3.779917615329688*^9}, {
   3.7799176620462303`*^9, 3.7799176927690277`*^9}, 3.779917762659664*^9, 
   3.779918356635497*^9, {3.779918504620717*^9, 3.7799185047226353`*^9}, 
   3.779918605968885*^9, {3.779918643629993*^9, 3.779918647162863*^9}, 
   3.779918699340642*^9, {3.779991041991332*^9, 3.7799914963184767`*^9}, {
   3.779991534800233*^9, 3.779992302050724*^9}, {3.779992333660487*^9, 
   3.779992394435937*^9}, {3.7799925021845007`*^9, 3.779992502683029*^9}, {
   3.779992551958116*^9, 3.779992574574526*^9}, {3.7799926258545847`*^9, 
   3.779992630834258*^9}, {3.779992685113505*^9, 3.7799929043524427`*^9}, {
   3.779992940169862*^9, 3.779993047449215*^9}, {3.779993481529447*^9, 
   3.779993519750454*^9}, {3.779993568402925*^9, 3.779993639101404*^9}, {
   3.780002049733828*^9, 3.780002095948865*^9}, 3.780608093888063*^9, {
   3.780608302216215*^9, 3.780608333652979*^9}, {3.78060839528811*^9, 
   3.780608468490294*^9}, {3.780608565187187*^9, 3.780608591168404*^9}, {
   3.780848368952923*^9, 3.780848374271275*^9}, {3.780848409789184*^9, 
   3.7808484702803907`*^9}, {3.78084851601583*^9, 3.780848517754285*^9}, {
   3.780848567980343*^9, 3.780848568282164*^9}, {3.780848623826301*^9, 
   3.780849059478101*^9}, {3.780849089573493*^9, 3.78084909084097*^9}, {
   3.780849135518783*^9, 3.780849506802033*^9}, {3.780849613747326*^9, 
   3.7808496227153893`*^9}, {3.780849707795391*^9, 3.7808497265381413`*^9}, {
   3.780849806538265*^9, 3.780849808610767*^9}, {3.780849893129511*^9, 
   3.780849948849188*^9}, {3.7808502503345346`*^9, 3.7808503553483963`*^9}, {
   3.780850945269532*^9, 3.7808509763091087`*^9}, {3.781388121965824*^9, 
   3.781388261804392*^9}, {3.781388351836862*^9, 3.781388372417387*^9}, {
   3.781388405402597*^9, 3.781388473345243*^9}, {3.7813885129253817`*^9, 
   3.781388565192981*^9}, {3.781388596097122*^9, 3.7813886816406507`*^9}, {
   3.781388731184884*^9, 3.7813887751478148`*^9}, {3.781388842785747*^9, 
   3.781388890532277*^9}, {3.781388960916286*^9, 3.781388964535454*^9}, {
   3.7813890002111473`*^9, 3.78138902586473*^9}, 3.781389058573085*^9, {
   3.781389096372469*^9, 3.7813890978637543`*^9}, {3.782914575135816*^9, 
   3.782914576271948*^9}, 3.782914632042466*^9, 3.782917861569688*^9, {
   3.7829179844679403`*^9, 3.782917985472925*^9}, {3.7829180950964403`*^9, 
   3.78291826990978*^9}, 3.7829183674797173`*^9, {3.782925343113843*^9, 
   3.782925344132732*^9}, {3.7829264715758057`*^9, 3.782926728456897*^9}, {
   3.7829268115696087`*^9, 3.782926960616436*^9}, {3.782926995444021*^9, 
   3.782927066154413*^9}, {3.78292718999125*^9, 3.782927202911777*^9}, {
   3.782930458380905*^9, 3.782930834386322*^9}, {3.782931219953183*^9, 
   3.782931247224353*^9}, {3.782931324505533*^9, 3.782931468232914*^9}, {
   3.782931532822671*^9, 3.7829315410868692`*^9}, {3.782931582841174*^9, 
   3.7829316604776497`*^9}, {3.782931699678203*^9, 3.782931812011236*^9}, {
   3.7829318545482683`*^9, 3.782932004830435*^9}, {3.78293212169475*^9, 
   3.7829322437458267`*^9}, 3.782932475723791*^9, 3.782932529748578*^9, {
   3.782932563005225*^9, 3.782932568167737*^9}, {3.782932644706859*^9, 
   3.782932660480358*^9}, {3.782932779042261*^9, 3.782932781850325*^9}, {
   3.7829389554267178`*^9, 3.782938991924819*^9}, {3.782939036832819*^9, 
   3.782939111756938*^9}, {3.782939170241109*^9, 3.782939629439642*^9}, {
   3.782939773145121*^9, 3.782940016381896*^9}, {3.782940206557701*^9, 
   3.7829402478001413`*^9}, 3.782940359464053*^9, {3.7829464232077417`*^9, 
   3.78294643427453*^9}, {3.78294647339155*^9, 3.782946607249578*^9}, {
   3.782946640189706*^9, 3.7829467168221903`*^9}, {3.782997632724264*^9, 
   3.7829976342012463`*^9}, {3.7830983522119637`*^9, 
   3.7830983550688267`*^9}, {3.783098523941028*^9, 3.783098537080124*^9}, {
   3.784222502974744*^9, 3.784222506736307*^9}, {3.784483733074597*^9, 
   3.784483996192*^9}, {3.784484032919414*^9, 3.784484061741238*^9}, {
   3.784484115865436*^9, 3.7844841404827642`*^9}, {3.784484171619176*^9, 
   3.784484221259837*^9}, {3.78448428374289*^9, 3.784484474312859*^9}, {
   3.7844845629382*^9, 3.784484597976173*^9}, {3.784484709295369*^9, 
   3.7844847749965677`*^9}, {3.784484839993987*^9, 3.7844848407007732`*^9}, 
   3.784485099259931*^9, 3.7844851631849537`*^9, {3.784485267975892*^9, 
   3.7844853551864853`*^9}, 3.784485676048807*^9, {3.784485744072043*^9, 
   3.784485810627873*^9}, {3.784485844292243*^9, 3.78448605367085*^9}, {
   3.7844860939846277`*^9, 3.78448615373036*^9}, {3.78448630009873*^9, 
   3.784486309220183*^9}, {3.784486351497191*^9, 3.7844863705233383`*^9}, {
   3.7844864009922533`*^9, 3.784486466509852*^9}, {3.784486517592429*^9, 
   3.7844865465652103`*^9}, {3.784486693372613*^9, 3.784486694536952*^9}, 
   3.78448676776175*^9, {3.784486833517311*^9, 3.784486854254291*^9}, {
   3.784500040414558*^9, 3.78450012987752*^9}, {3.784500161426518*^9, 
   3.784500470428012*^9}, {3.7845005050742407`*^9, 3.78450087575924*^9}, {
   3.784501336808927*^9, 3.784501347174756*^9}, {3.784501775978627*^9, 
   3.784501841174409*^9}, {3.784502090259927*^9, 3.78450210224371*^9}, {
   3.784503552951632*^9, 3.784503560867812*^9}, {3.78450410251632*^9, 
   3.784504144183813*^9}, {3.784504280482006*^9, 3.784504286912107*^9}, {
   3.784504400647935*^9, 3.784504448661448*^9}, {3.7845049201196413`*^9, 
   3.7845049239267073`*^9}, 3.784505374688786*^9, {3.784505502142136*^9, 
   3.784505525729783*^9}, {3.784536635263043*^9, 3.784536656689516*^9}, 
   3.784537091940497*^9, {3.7845372808263702`*^9, 3.784537281681532*^9}, {
   3.78453739069221*^9, 3.784537391872179*^9}, 3.784537945164872*^9, {
   3.784538000347209*^9, 3.7845380087200727`*^9}, 3.784538086833398*^9, {
   3.7845382842875433`*^9, 3.7845383354667387`*^9}, {3.784538595498282*^9, 
   3.784538631332431*^9}, {3.784538678744484*^9, 3.7845386839531193`*^9}, 
   3.784538753354637*^9, {3.784539019307571*^9, 3.784539029558215*^9}, {
   3.784539088014428*^9, 3.784539147156255*^9}, {3.7845392199249496`*^9, 
   3.784539244500064*^9}, {3.7845395602798567`*^9, 3.7845396103577023`*^9}, {
   3.784539729588509*^9, 3.784539734041716*^9}, {3.784539912395937*^9, 
   3.7845400663181334`*^9}, {3.7845401406195593`*^9, 
   3.7845401893453093`*^9}, {3.7845402655648813`*^9, 3.784540316672521*^9}, {
   3.7845403587945147`*^9, 3.784540364042087*^9}, {3.784545971370448*^9, 
   3.784546005112796*^9}, {3.784546101346209*^9, 3.784546122059203*^9}, {
   3.784546174091103*^9, 3.784546214060697*^9}, {3.784546244818041*^9, 
   3.784546301867571*^9}, {3.784546530071239*^9, 3.784546554098277*^9}, {
   3.784546703273226*^9, 3.78454674723199*^9}, {3.7845471052693777`*^9, 
   3.784547213589912*^9}, {3.784547248382903*^9, 3.784547257933179*^9}, {
   3.784547393213543*^9, 3.784547482483295*^9}, {3.784547549739743*^9, 
   3.784547622962439*^9}, {3.784547670486319*^9, 3.784547671424283*^9}, {
   3.78454771120765*^9, 3.784547787608802*^9}, {3.784547844009728*^9, 
   3.784547865324972*^9}, {3.7845481897590933`*^9, 3.784548206498468*^9}, {
   3.784548254623517*^9, 3.7845482585823593`*^9}, {3.784548516185318*^9, 
   3.784548627660357*^9}, {3.784548752227469*^9, 3.7845487532730093`*^9}, {
   3.7845488001907883`*^9, 3.784548851814271*^9}, 3.7845489602436934`*^9, {
   3.784549012886074*^9, 3.784549045057308*^9}, 3.784549144500766*^9, {
   3.784552883139937*^9, 3.784553022637514*^9}, {3.784553053945772*^9, 
   3.784553188970001*^9}, {3.784553286203027*^9, 3.784553287482095*^9}, {
   3.784553461236321*^9, 3.784553463039505*^9}, {3.784672092421618*^9, 
   3.78467210142414*^9}, {3.784672511820739*^9, 3.7846725365170507`*^9}, {
   3.784672807457246*^9, 3.7846728435913258`*^9}, {3.784672888506659*^9, 
   3.78467289418277*^9}, {3.784672928647015*^9, 3.784673003126684*^9}, {
   3.784673033533298*^9, 3.784673034098489*^9}, {3.784735372803734*^9, 
   3.7847354328435097`*^9}, {3.7847354869372673`*^9, 3.784735488520411*^9}, {
   3.7847355237707148`*^9, 3.784735709239214*^9}, {3.784735917023664*^9, 
   3.7847359333186502`*^9}, {3.78473603451398*^9, 3.784736052692246*^9}, {
   3.7848488027401876`*^9, 3.784848825266653*^9}, {3.784848910872017*^9, 
   3.784848926081388*^9}, {3.7848489821849937`*^9, 3.784848983069193*^9}, {
   3.7848490191432543`*^9, 3.78484903640107*^9}, {3.784849572020219*^9, 
   3.78484964167863*^9}, {3.784849680311158*^9, 3.7848496944154987`*^9}, {
   3.784849726666111*^9, 3.784849874299287*^9}, {3.784850294954715*^9, 
   3.784850375153894*^9}, {3.784850912547295*^9, 3.784850917787363*^9}, {
   3.78485095070531*^9, 3.784851325602373*^9}, {3.784851370786446*^9, 
   3.784851423847987*^9}, 3.784851554964664*^9, {3.784851708925856*^9, 
   3.784851764759129*^9}, 3.7848519861344147`*^9, {3.7848520203164673`*^9, 
   3.784852078811943*^9}, {3.784852199029191*^9, 3.7848522849288*^9}, {
   3.784907144790189*^9, 3.784907182227594*^9}, {3.7849072162683687`*^9, 
   3.7849073016543093`*^9}, {3.784907333325079*^9, 3.7849074486290407`*^9}, {
   3.784907483769393*^9, 3.784907576403887*^9}, {3.784907615477874*^9, 
   3.78490770180096*^9}, {3.784907732602188*^9, 3.784907753379546*^9}, {
   3.7849077953397217`*^9, 3.784907797354661*^9}, {3.784907948201527*^9, 
   3.784907958438512*^9}, {3.784908049071856*^9, 3.7849080721501293`*^9}, {
   3.7849085402436743`*^9, 3.784908561219719*^9}, {3.784908654396439*^9, 
   3.784908718282571*^9}, {3.7849095958306017`*^9, 3.78490965339878*^9}, {
   3.784909727600864*^9, 
   3.784909738869686*^9}},ExpressionUUID->"2f40fbf6-39c8-419e-9fe9-\
3a0e478ef103"]
}, Open  ]]
},
WindowSize->{991, 1326},
WindowMargins->{{634, Automatic}, {Automatic, 8}},
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[422, 15, 205, 4, 67, "Section",ExpressionUUID->"52e0d913-f014-492c-a6b4-5cbda98ccb7a"],
Cell[630, 21, 933, 16, 58, InheritFromParent,ExpressionUUID->"82993419-cba8-452c-9d5c-e6ab1dab52c6"],
Cell[1566, 39, 152747, 3260, 10714, "Input",ExpressionUUID->"2f40fbf6-39c8-419e-9fe9-3a0e478ef103"]
}, Open  ]]
}
]
*)

